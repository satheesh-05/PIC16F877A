

HI-TECH Software PIC LITE Macro Assembler V9.70 build 5239 
                                                                                               Sun Mar 03 09:36:11 2024

HI-TECH Software Omniscient Code Generator (Lite mode) build 5239
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 5239"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 2 "C:\Users\Satheesh M\Documents\Body Temperature using PIC16F877A\MPLAB\lm35.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 2 "C:\Users\Satheesh M\Documents\Body Temperature using PIC16F877A\MPLAB\lm35.c"
    45  2007  3F72               	dw 0X3F72 ;#
    46                           ;COMMON:	_main->_lcd_cmd
    47                           ;COMMON:	_lcd_cmd->_delay
    48                           ;BANK0:	_main->___awdiv
    49                           ;COMMON:	___awdiv->___wmul
    50                           ;BANK0:	___awdiv->___wmul
    51                           ;COMMON:	_main->_lcd_data
    52                           ;COMMON:	_lcd_data->_delay
    53                           	FNCALL	_main,_lcd_init
    54                           	FNCALL	_main,_delay
    55                           	FNCALL	_main,_lcd_cmd
    56                           	FNCALL	_main,_lcd_display
    57                           	FNCALL	_main,___wmul
    58                           	FNCALL	_main,___awdiv
    59                           	FNCALL	_main,___lwdiv
    60                           	FNCALL	_main,___lwmod
    61                           	FNCALL	_main,_lcd_data
    62                           	FNCALL	_lcd_init,_lcd_cmd
    63                           	FNCALL	_lcd_display,_lcd_data
    64                           	FNCALL	_lcd_cmd,_delay
    65                           	FNCALL	_lcd_data,_delay
    66                           	FNROOT	_main
    67                           	global	_C
    68                           	global	_D
    69                           	global	_A
    70                           	global	_B
    71                           	global	_E
    72                           	global	_ADCON0
    73                           psect	text64,local,class=CODE,delta=2
    74                           global __ptext64
    75  0463                     __ptext64:
    76  001F                     _ADCON0  equ     31
    77                           	global	_ADRESH
    78  001E                     _ADRESH  equ     30
    79                           	global	_CCP1CON
    80  0017                     _CCP1CON  equ     23
    81                           	global	_CCP2CON
    82  001D                     _CCP2CON  equ     29
    83                           	global	_CCPR1H
    84  0016                     _CCPR1H  equ     22
    85                           	global	_CCPR1L
    86  0015                     _CCPR1L  equ     21
    87                           	global	_CCPR2H
    88  001C                     _CCPR2H  equ     28
    89                           	global	_CCPR2L
    90  001B                     _CCPR2L  equ     27
    91                           	global	_FSR
    92  0004                     _FSR  equ     4
    93                           	global	_INDF
    94  0000                     _INDF  equ     0
    95                           	global	_INTCON
    96  000B                     _INTCON  equ     11
    97                           	global	_PCL
    98  0002                     _PCL  equ     2
    99                           	global	_PCLATH
   100  000A                     _PCLATH  equ     10
   101                           	global	_PIR1
   102  000C                     _PIR1  equ     12
   103                           	global	_PIR2
   104  000D                     _PIR2  equ     13
   105                           	global	_PORTA
   106  0005                     _PORTA  equ     5
   107                           	global	_PORTB
   108  0006                     _PORTB  equ     6
   109                           	global	_PORTC
   110  0007                     _PORTC  equ     7
   111                           	global	_PORTD
   112  0008                     _PORTD  equ     8
   113                           	global	_PORTE
   114  0009                     _PORTE  equ     9
   115                           	global	_RCREG
   116  001A                     _RCREG  equ     26
   117                           	global	_RCSTA
   118  0018                     _RCSTA  equ     24
   119                           	global	_SSPBUF
   120  0013                     _SSPBUF  equ     19
   121                           	global	_SSPCON
   122  0014                     _SSPCON  equ     20
   123                           	global	_STATUS
   124  0003                     _STATUS  equ     3
   125                           	global	_T1CON
   126  0010                     _T1CON  equ     16
   127                           	global	_T2CON
   128  0012                     _T2CON  equ     18
   129                           	global	_TMR0
   130  0001                     _TMR0  equ     1
   131                           	global	_TMR1H
   132  000F                     _TMR1H  equ     15
   133                           	global	_TMR1L
   134  000E                     _TMR1L  equ     14
   135                           	global	_TMR2
   136  0011                     _TMR2  equ     17
   137                           	global	_TXREG
   138  0019                     _TXREG  equ     25
   139                           	global	_ADCS0
   140  00FE                     _ADCS0  equ     254
   141                           	global	_ADCS1
   142  00FF                     _ADCS1  equ     255
   143                           	global	_ADDEN
   144  00C3                     _ADDEN  equ     195
   145                           	global	_ADGO
   146  00FA                     _ADGO  equ     250
   147                           	global	_ADIF
   148  0066                     _ADIF  equ     102
   149                           	global	_ADON
   150  00F8                     _ADON  equ     248
   151                           	global	_BCLIF
   152  006B                     _BCLIF  equ     107
   153                           	global	_CARRY
   154  0018                     _CARRY  equ     24
   155                           	global	_CCP1IF
   156  0062                     _CCP1IF  equ     98
   157                           	global	_CCP1M0
   158  00B8                     _CCP1M0  equ     184
   159                           	global	_CCP1M1
   160  00B9                     _CCP1M1  equ     185
   161                           	global	_CCP1M2
   162  00BA                     _CCP1M2  equ     186
   163                           	global	_CCP1M3
   164  00BB                     _CCP1M3  equ     187
   165                           	global	_CCP1X
   166  00BD                     _CCP1X  equ     189
   167                           	global	_CCP1Y
   168  00BC                     _CCP1Y  equ     188
   169                           	global	_CCP2IF
   170  0068                     _CCP2IF  equ     104
   171                           	global	_CCP2M0
   172  00E8                     _CCP2M0  equ     232
   173                           	global	_CCP2M1
   174  00E9                     _CCP2M1  equ     233
   175                           	global	_CCP2M2
   176  00EA                     _CCP2M2  equ     234
   177                           	global	_CCP2M3
   178  00EB                     _CCP2M3  equ     235
   179                           	global	_CCP2X
   180  00ED                     _CCP2X  equ     237
   181                           	global	_CCP2Y
   182  00EC                     _CCP2Y  equ     236
   183                           	global	_CHS0
   184  00FB                     _CHS0  equ     251
   185                           	global	_CHS1
   186  00FC                     _CHS1  equ     252
   187                           	global	_CHS2
   188  00FD                     _CHS2  equ     253
   189                           	global	_CKP
   190  00A4                     _CKP  equ     164
   191                           	global	_CMIF
   192  006E                     _CMIF  equ     110
   193                           	global	_CREN
   194  00C4                     _CREN  equ     196
   195                           	global	_DC
   196  0019                     _DC  equ     25
   197                           	global	_EEIF
   198  006C                     _EEIF  equ     108
   199                           	global	_FERR
   200  00C2                     _FERR  equ     194
   201                           	global	_GIE
   202  005F                     _GIE  equ     95
   203                           	global	_GODONE
   204  00FA                     _GODONE  equ     250
   205                           	global	_INTE
   206  005C                     _INTE  equ     92
   207                           	global	_INTF
   208  0059                     _INTF  equ     89
   209                           	global	_IRP
   210  001F                     _IRP  equ     31
   211                           	global	_OERR
   212  00C1                     _OERR  equ     193
   213                           	global	_PD
   214  001B                     _PD  equ     27
   215                           	global	_PEIE
   216  005E                     _PEIE  equ     94
   217                           	global	_PSPIF
   218  0067                     _PSPIF  equ     103
   219                           	global	_RA0
   220  0028                     _RA0  equ     40
   221                           	global	_RA1
   222  0029                     _RA1  equ     41
   223                           	global	_RA2
   224  002A                     _RA2  equ     42
   225                           	global	_RA3
   226  002B                     _RA3  equ     43
   227                           	global	_RA4
   228  002C                     _RA4  equ     44
   229                           	global	_RA5
   230  002D                     _RA5  equ     45
   231                           	global	_RB0
   232  0030                     _RB0  equ     48
   233                           	global	_RB1
   234  0031                     _RB1  equ     49
   235                           	global	_RB2
   236  0032                     _RB2  equ     50
   237                           	global	_RB3
   238  0033                     _RB3  equ     51
   239                           	global	_RB4
   240  0034                     _RB4  equ     52
   241                           	global	_RB5
   242  0035                     _RB5  equ     53
   243                           	global	_RB6
   244  0036                     _RB6  equ     54
   245                           	global	_RB7
   246  0037                     _RB7  equ     55
   247                           	global	_RBIE
   248  005B                     _RBIE  equ     91
   249                           	global	_RBIF
   250  0058                     _RBIF  equ     88
   251                           	global	_RC0
   252  0038                     _RC0  equ     56
   253                           	global	_RC1
   254  0039                     _RC1  equ     57
   255                           	global	_RC2
   256  003A                     _RC2  equ     58
   257                           	global	_RC3
   258  003B                     _RC3  equ     59
   259                           	global	_RC4
   260  003C                     _RC4  equ     60
   261                           	global	_RC5
   262  003D                     _RC5  equ     61
   263                           	global	_RC6
   264  003E                     _RC6  equ     62
   265                           	global	_RC7
   266  003F                     _RC7  equ     63
   267                           	global	_RCIF
   268  0065                     _RCIF  equ     101
   269                           	global	_RD0
   270  0040                     _RD0  equ     64
   271                           	global	_RD1
   272  0041                     _RD1  equ     65
   273                           	global	_RD2
   274  0042                     _RD2  equ     66
   275                           	global	_RD3
   276  0043                     _RD3  equ     67
   277                           	global	_RD4
   278  0044                     _RD4  equ     68
   279                           	global	_RD5
   280  0045                     _RD5  equ     69
   281                           	global	_RD6
   282  0046                     _RD6  equ     70
   283                           	global	_RD7
   284  0047                     _RD7  equ     71
   285                           	global	_RE0
   286  0048                     _RE0  equ     72
   287                           	global	_RE1
   288  0049                     _RE1  equ     73
   289                           	global	_RE2
   290  004A                     _RE2  equ     74
   291                           	global	_RP0
   292  001D                     _RP0  equ     29
   293                           	global	_RP1
   294  001E                     _RP1  equ     30
   295                           	global	_RX9
   296  00C6                     _RX9  equ     198
   297                           	global	_RX9D
   298  00C0                     _RX9D  equ     192
   299                           	global	_SPEN
   300  00C7                     _SPEN  equ     199
   301                           	global	_SREN
   302  00C5                     _SREN  equ     197
   303                           	global	_SSPEN
   304  00A5                     _SSPEN  equ     165
   305                           	global	_SSPIF
   306  0063                     _SSPIF  equ     99
   307                           	global	_SSPM0
   308  00A0                     _SSPM0  equ     160
   309                           	global	_SSPM1
   310  00A1                     _SSPM1  equ     161
   311                           	global	_SSPM2
   312  00A2                     _SSPM2  equ     162
   313                           	global	_SSPM3
   314  00A3                     _SSPM3  equ     163
   315                           	global	_SSPOV
   316  00A6                     _SSPOV  equ     166
   317                           	global	_T0IE
   318  005D                     _T0IE  equ     93
   319                           	global	_T0IF
   320  005A                     _T0IF  equ     90
   321                           	global	_T1CKPS0
   322  0084                     _T1CKPS0  equ     132
   323                           	global	_T1CKPS1
   324  0085                     _T1CKPS1  equ     133
   325                           	global	_T1OSCEN
   326  0083                     _T1OSCEN  equ     131
   327                           	global	_T1SYNC
   328  0082                     _T1SYNC  equ     130
   329                           	global	_T2CKPS0
   330  0090                     _T2CKPS0  equ     144
   331                           	global	_T2CKPS1
   332  0091                     _T2CKPS1  equ     145
   333                           	global	_TMR0IE
   334  005D                     _TMR0IE  equ     93
   335                           	global	_TMR0IF
   336  005A                     _TMR0IF  equ     90
   337                           	global	_TMR1CS
   338  0081                     _TMR1CS  equ     129
   339                           	global	_TMR1IF
   340  0060                     _TMR1IF  equ     96
   341                           	global	_TMR1ON
   342  0080                     _TMR1ON  equ     128
   343                           	global	_TMR2IF
   344  0061                     _TMR2IF  equ     97
   345                           	global	_TMR2ON
   346  0092                     _TMR2ON  equ     146
   347                           	global	_TO
   348  001C                     _TO  equ     28
   349                           	global	_TOUTPS0
   350  0093                     _TOUTPS0  equ     147
   351                           	global	_TOUTPS1
   352  0094                     _TOUTPS1  equ     148
   353                           	global	_TOUTPS2
   354  0095                     _TOUTPS2  equ     149
   355                           	global	_TOUTPS3
   356  0096                     _TOUTPS3  equ     150
   357                           	global	_TXIF
   358  0064                     _TXIF  equ     100
   359                           	global	_WCOL
   360  00A7                     _WCOL  equ     167
   361                           	global	_ZERO
   362  001A                     _ZERO  equ     26
   363                           	global	_ADCON1
   364  009F                     _ADCON1  equ     159
   365                           	global	_ADRESL
   366  009E                     _ADRESL  equ     158
   367                           	global	_CMCON
   368  009C                     _CMCON  equ     156
   369                           	global	_CVRCON
   370  009D                     _CVRCON  equ     157
   371                           	global	_OPTION
   372  0081                     _OPTION  equ     129
   373                           	global	_PCON
   374  008E                     _PCON  equ     142
   375                           	global	_PIE1
   376  008C                     _PIE1  equ     140
   377                           	global	_PIE2
   378  008D                     _PIE2  equ     141
   379                           	global	_PR2
   380  0092                     _PR2  equ     146
   381                           	global	_SPBRG
   382  0099                     _SPBRG  equ     153
   383                           	global	_SSPADD
   384  0093                     _SSPADD  equ     147
   385                           	global	_SSPCON2
   386  0091                     _SSPCON2  equ     145
   387                           	global	_SSPSTAT
   388  0094                     _SSPSTAT  equ     148
   389                           	global	_TRISA
   390  0085                     _TRISA  equ     133
   391                           	global	_TRISB
   392  0086                     _TRISB  equ     134
   393                           	global	_TRISC
   394  0087                     _TRISC  equ     135
   395                           	global	_TRISD
   396  0088                     _TRISD  equ     136
   397                           	global	_TRISE
   398  0089                     _TRISE  equ     137
   399                           	global	_TXSTA
   400  0098                     _TXSTA  equ     152
   401                           	global	_ACKDT
   402  048D                     _ACKDT  equ     1165
   403                           	global	_ACKEN
   404  048C                     _ACKEN  equ     1164
   405                           	global	_ACKSTAT
   406  048E                     _ACKSTAT  equ     1166
   407                           	global	_ADCS2
   408  04FE                     _ADCS2  equ     1278
   409                           	global	_ADFM
   410  04FF                     _ADFM  equ     1279
   411                           	global	_ADIE
   412  0466                     _ADIE  equ     1126
   413                           	global	_BCLIE
   414  046B                     _BCLIE  equ     1131
   415                           	global	_BF
   416  04A0                     _BF  equ     1184
   417                           	global	_BOR
   418  0470                     _BOR  equ     1136
   419                           	global	_BRGH
   420  04C2                     _BRGH  equ     1218
   421                           	global	_C1INV
   422  04E4                     _C1INV  equ     1252
   423                           	global	_C1OUT
   424  04E6                     _C1OUT  equ     1254
   425                           	global	_C2INV
   426  04E5                     _C2INV  equ     1253
   427                           	global	_C2OUT
   428  04E7                     _C2OUT  equ     1255
   429                           	global	_CCP1IE
   430  0462                     _CCP1IE  equ     1122
   431                           	global	_CCP2IE
   432  0468                     _CCP2IE  equ     1128
   433                           	global	_CIS
   434  04E3                     _CIS  equ     1251
   435                           	global	_CKE
   436  04A6                     _CKE  equ     1190
   437                           	global	_CM0
   438  04E0                     _CM0  equ     1248
   439                           	global	_CM1
   440  04E1                     _CM1  equ     1249
   441                           	global	_CM2
   442  04E2                     _CM2  equ     1250
   443                           	global	_CMIE
   444  046E                     _CMIE  equ     1134
   445                           	global	_CSRC
   446  04C7                     _CSRC  equ     1223
   447                           	global	_CVR0
   448  04E8                     _CVR0  equ     1256
   449                           	global	_CVR1
   450  04E9                     _CVR1  equ     1257
   451                           	global	_CVR2
   452  04EA                     _CVR2  equ     1258
   453                           	global	_CVR3
   454  04EB                     _CVR3  equ     1259
   455                           	global	_CVREN
   456  04EF                     _CVREN  equ     1263
   457                           	global	_CVROE
   458  04EE                     _CVROE  equ     1262
   459                           	global	_CVRR
   460  04ED                     _CVRR  equ     1261
   461                           	global	_DA
   462  04A5                     _DA  equ     1189
   463                           	global	_EEIE
   464  046C                     _EEIE  equ     1132
   465                           	global	_GCEN
   466  048F                     _GCEN  equ     1167
   467                           	global	_IBF
   468  044F                     _IBF  equ     1103
   469                           	global	_IBOV
   470  044D                     _IBOV  equ     1101
   471                           	global	_INTEDG
   472  040E                     _INTEDG  equ     1038
   473                           	global	_OBF
   474  044E                     _OBF  equ     1102
   475                           	global	_PCFG0
   476  04F8                     _PCFG0  equ     1272
   477                           	global	_PCFG1
   478  04F9                     _PCFG1  equ     1273
   479                           	global	_PCFG2
   480  04FA                     _PCFG2  equ     1274
   481                           	global	_PCFG3
   482  04FB                     _PCFG3  equ     1275
   483                           	global	_PEN
   484  048A                     _PEN  equ     1162
   485                           	global	_POR
   486  0471                     _POR  equ     1137
   487                           	global	_PS0
   488  0408                     _PS0  equ     1032
   489                           	global	_PS1
   490  0409                     _PS1  equ     1033
   491                           	global	_PS2
   492  040A                     _PS2  equ     1034
   493                           	global	_PSA
   494  040B                     _PSA  equ     1035
   495                           	global	_PSPIE
   496  0467                     _PSPIE  equ     1127
   497                           	global	_PSPMODE
   498  044C                     _PSPMODE  equ     1100
   499                           	global	_RBPU
   500  040F                     _RBPU  equ     1039
   501                           	global	_RCEN
   502  048B                     _RCEN  equ     1163
   503                           	global	_RCIE
   504  0465                     _RCIE  equ     1125
   505                           	global	_RSEN
   506  0489                     _RSEN  equ     1161
   507                           	global	_RW
   508  04A2                     _RW  equ     1186
   509                           	global	_SEN
   510  0488                     _SEN  equ     1160
   511                           	global	_SMP
   512  04A7                     _SMP  equ     1191
   513                           	global	_SSPIE
   514  0463                     _SSPIE  equ     1123
   515                           	global	_START
   516  04A3                     _START  equ     1187
   517                           	global	_STOP
   518  04A4                     _STOP  equ     1188
   519                           	global	_SYNC
   520  04C4                     _SYNC  equ     1220
   521                           	global	_T0CS
   522  040D                     _T0CS  equ     1037
   523                           	global	_T0SE
   524  040C                     _T0SE  equ     1036
   525                           	global	_TMR1IE
   526  0460                     _TMR1IE  equ     1120
   527                           	global	_TMR2IE
   528  0461                     _TMR2IE  equ     1121
   529                           	global	_TRISA0
   530  0428                     _TRISA0  equ     1064
   531                           	global	_TRISA1
   532  0429                     _TRISA1  equ     1065
   533                           	global	_TRISA2
   534  042A                     _TRISA2  equ     1066
   535                           	global	_TRISA3
   536  042B                     _TRISA3  equ     1067
   537                           	global	_TRISA4
   538  042C                     _TRISA4  equ     1068
   539                           	global	_TRISA5
   540  042D                     _TRISA5  equ     1069
   541                           	global	_TRISB0
   542  0430                     _TRISB0  equ     1072
   543                           	global	_TRISB1
   544  0431                     _TRISB1  equ     1073
   545                           	global	_TRISB2
   546  0432                     _TRISB2  equ     1074
   547                           	global	_TRISB3
   548  0433                     _TRISB3  equ     1075
   549                           	global	_TRISB4
   550  0434                     _TRISB4  equ     1076
   551                           	global	_TRISB5
   552  0435                     _TRISB5  equ     1077
   553                           	global	_TRISB6
   554  0436                     _TRISB6  equ     1078
   555                           	global	_TRISB7
   556  0437                     _TRISB7  equ     1079
   557                           	global	_TRISC0
   558  0438                     _TRISC0  equ     1080
   559                           	global	_TRISC1
   560  0439                     _TRISC1  equ     1081
   561                           	global	_TRISC2
   562  043A                     _TRISC2  equ     1082
   563                           	global	_TRISC3
   564  043B                     _TRISC3  equ     1083
   565                           	global	_TRISC4
   566  043C                     _TRISC4  equ     1084
   567                           	global	_TRISC5
   568  043D                     _TRISC5  equ     1085
   569                           	global	_TRISC6
   570  043E                     _TRISC6  equ     1086
   571                           	global	_TRISC7
   572  043F                     _TRISC7  equ     1087
   573                           	global	_TRISD0
   574  0440                     _TRISD0  equ     1088
   575                           	global	_TRISD1
   576  0441                     _TRISD1  equ     1089
   577                           	global	_TRISD2
   578  0442                     _TRISD2  equ     1090
   579                           	global	_TRISD3
   580  0443                     _TRISD3  equ     1091
   581                           	global	_TRISD4
   582  0444                     _TRISD4  equ     1092
   583                           	global	_TRISD5
   584  0445                     _TRISD5  equ     1093
   585                           	global	_TRISD6
   586  0446                     _TRISD6  equ     1094
   587                           	global	_TRISD7
   588  0447                     _TRISD7  equ     1095
   589                           	global	_TRISE0
   590  0448                     _TRISE0  equ     1096
   591                           	global	_TRISE1
   592  0449                     _TRISE1  equ     1097
   593                           	global	_TRISE2
   594  044A                     _TRISE2  equ     1098
   595                           	global	_TRMT
   596  04C1                     _TRMT  equ     1217
   597                           	global	_TX9
   598  04C6                     _TX9  equ     1222
   599                           	global	_TX9D
   600  04C0                     _TX9D  equ     1216
   601                           	global	_TXEN
   602  04C5                     _TXEN  equ     1221
   603                           	global	_TXIE
   604  0464                     _TXIE  equ     1124
   605                           	global	_UA
   606  04A1                     _UA  equ     1185
   607                           	global	_EEADR
   608  010D                     _EEADR  equ     269
   609                           	global	_EEADRH
   610  010F                     _EEADRH  equ     271
   611                           	global	_EEADRL
   612  010D                     _EEADRL  equ     269
   613                           	global	_EEDATA
   614  010C                     _EEDATA  equ     268
   615                           	global	_EEDATH
   616  010E                     _EEDATH  equ     270
   617                           	global	_EECON1
   618  018C                     _EECON1  equ     396
   619                           	global	_EECON2
   620  018D                     _EECON2  equ     397
   621                           	global	_EEPGD
   622  0C67                     _EEPGD  equ     3175
   623                           	global	_RD
   624  0C60                     _RD  equ     3168
   625                           	global	_WR
   626  0C61                     _WR  equ     3169
   627                           	global	_WREN
   628  0C62                     _WREN  equ     3170
   629                           	global	_WRERR
   630  0C63                     _WRERR  equ     3171
   631                           psect	strings,class=CODE,delta=2,reloc=256
   632                           global __pstrings
   633  0400                     __pstrings:
   634                           	global	stringdir,stringtab,__stringbase,stringjmp
   635  0400                     stringtab:
   636                           ;	String table - string pointers are 1 byte each
   637  0400  00FE               	movwf	(btemp)&07Fh
   638  0401  1FFE               	btfss	(btemp)&07Fh,7
   639  0402  2C08               	goto	stringcode
   640  0403  1383               	bcf	status,7
   641  0404  187E               	btfsc	btemp&7Fh,0
   642  0405  1783               	bsf	status,7
   643  0406  0800               	movf	indf,w
   644  0407  0008               	return
   645  0408                     stringcode:
   646  0408  0804               	movf	fsr,w
   647  0409                     stringdir:
   648  0409  00FE               movwf btemp&07Fh
   649  040A  3004               movlw high(stringdir)
   650  040B  008A               movwf pclath
   651  040C  087E               movf btemp&07Fh,w
   652  040D                     stringjmp:
   653  040D  0782               	addwf pc
   654  040E                     __stringbase:
   655  040E  3400               	retlw	0
   656                           psect	strings
   657                           	
   658  040F                     STR_2:	
   659  040F  3442               	retlw	66	;'B'
   660  0410  346F               	retlw	111	;'o'
   661  0411  3464               	retlw	100	;'d'
   662  0412  3479               	retlw	121	;'y'
   663  0413  3420               	retlw	32	;' '
   664  0414  3454               	retlw	84	;'T'
   665  0415  3465               	retlw	101	;'e'
   666  0416  346D               	retlw	109	;'m'
   667  0417  3470               	retlw	112	;'p'
   668  0418  3428               	retlw	40	;'('
   669  0419  3446               	retlw	70	;'F'
   670  041A  3429               	retlw	41	;')'
   671  041B  3420               	retlw	32	;' '
   672  041C  3400               	retlw	0
   673                           psect	strings
   674                           	
   675  041D                     STR_1:	
   676  041D  3457               	retlw	87	;'W'
   677  041E  3445               	retlw	69	;'E'
   678  041F  344C               	retlw	76	;'L'
   679  0420  3443               	retlw	67	;'C'
   680  0421  344F               	retlw	79	;'O'
   681  0422  344D               	retlw	77	;'M'
   682  0423  3445               	retlw	69	;'E'
   683  0424  3400               	retlw	0
   684                           psect	strings
   685                           	file	"lm35.as"
   686                           	line	#
   687                           psect cinit,class=CODE,delta=2
   688                           global start_initialization
   689  0455                     start_initialization:
   690                           
   691                           psect	bssCOMMON,class=COMMON,space=1
   692                           global __pbssCOMMON
   693  0070                     __pbssCOMMON:
   694  0070                     _A:
   695  0070                            ds      2
   696                           
   697  0072                     _B:
   698  0072                            ds      2
   699                           
   700  0074                     _E:
   701  0074                            ds      2
   702                           
   703                           psect	bssBANK0,class=BANK0,space=1
   704                           global __pbssBANK0
   705  0033                     __pbssBANK0:
   706  0033                     _C:
   707  0033                            ds      2
   708                           
   709  0035                     _D:
   710  0035                            ds      2
   711                           
   712                           ; Clear objects allocated to COMMON
   713                           psect cinit,class=CODE,delta=2
   714  0455  01F0               	clrf	((__pbssCOMMON)+0)&07Fh
   715  0456  01F1               	clrf	((__pbssCOMMON)+1)&07Fh
   716  0457  01F2               	clrf	((__pbssCOMMON)+2)&07Fh
   717  0458  01F3               	clrf	((__pbssCOMMON)+3)&07Fh
   718  0459  01F4               	clrf	((__pbssCOMMON)+4)&07Fh
   719  045A  01F5               	clrf	((__pbssCOMMON)+5)&07Fh
   720                           ; Clear objects allocated to BANK0
   721                           psect cinit,class=CODE,delta=2
   722  045B  01B3               	clrf	((__pbssBANK0)+0)&07Fh
   723  045C  01B4               	clrf	((__pbssBANK0)+1)&07Fh
   724  045D  01B5               	clrf	((__pbssBANK0)+2)&07Fh
   725  045E  01B6               	clrf	((__pbssBANK0)+3)&07Fh
   726                           psect cinit,class=CODE,delta=2
   727                           global end_of_initialization
   728                           
   729                           ;End of C runtime variable initationation code
   730                           
   731  045F                     end_of_initialization:
   732  045F  0183               clrf status
   733  0460  120A  118A  2EB4   ljmp _main	;jump to C main() function
   734                           psect	cstackCOMMON,class=COMMON,space=1
   735                           global __pcstackCOMMON
   736  0076                     __pcstackCOMMON:
   737                           	global	??___lwmod
   738  0076                     ??___lwmod: ;@ 0x0
   739                           	global	??___wmul
   740  0076                     ??___wmul: ;@ 0x0
   741                           	global	??_delay
   742  0076                     ??_delay: ;@ 0x0
   743                           	global	?_delay
   744  0076                     ?_delay: ;@ 0x0
   745                           	global	___wmul@product
   746  0076                     ___wmul@product:	; 2 bytes @ 0x0
   747                           	global	delay@a
   748  0076                     delay@a:	; 2 bytes @ 0x0
   749  0076                     	ds	1
   750                           	global	___lwmod@counter
   751  0077                     ___lwmod@counter:	; 1 bytes @ 0x1
   752  0077                     	ds	1
   753                           	global	??_lcd_cmd
   754  0078                     ??_lcd_cmd: ;@ 0x2
   755                           	global	??___awdiv
   756  0078                     ??___awdiv: ;@ 0x2
   757                           	global	??_lcd_data
   758  0078                     ??_lcd_data: ;@ 0x2
   759                           	global	??___lwdiv
   760  0078                     ??___lwdiv: ;@ 0x2
   761  0078                     	ds	1
   762                           	global	??_lcd_display
   763  0079                     ??_lcd_display: ;@ 0x3
   764                           	global	??_lcd_init
   765  0079                     ??_lcd_init: ;@ 0x3
   766  0079                     	ds	2
   767                           	global	?_lcd_init
   768  007B                     ?_lcd_init: ;@ 0x5
   769                           	global	?_main
   770  007B                     ?_main: ;@ 0x5
   771                           	global	?_lcd_data
   772  007B                     ?_lcd_data: ;@ 0x5
   773                           	global	?_lcd_display
   774  007B                     ?_lcd_display: ;@ 0x5
   775                           	global	?_lcd_cmd
   776  007B                     ?_lcd_cmd: ;@ 0x5
   777                           psect	cstackBANK0,class=BANK0,space=1
   778                           global __pcstackBANK0
   779  0020                     __pcstackBANK0:
   780                           	global	?___lwmod
   781  0020                     ?___lwmod: ;@ 0x0
   782                           	global	?___wmul
   783  0020                     ?___wmul: ;@ 0x0
   784                           	global	lcd_cmd@b
   785  0020                     lcd_cmd@b:	; 2 bytes @ 0x0
   786                           	global	___wmul@multiplier
   787  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
   788                           	global	lcd_data@c
   789  0020                     lcd_data@c:	; 2 bytes @ 0x0
   790                           	global	___lwmod@dividend
   791  0020                     ___lwmod@dividend:	; 2 bytes @ 0x0
   792  0020                     	ds	2
   793                           	global	lcd_data@dat
   794  0022                     lcd_data@dat:	; 1 bytes @ 0x2
   795                           	global	lcd_cmd@com
   796  0022                     lcd_cmd@com:	; 1 bytes @ 0x2
   797                           	global	___lwmod@divisor
   798  0022                     ___lwmod@divisor:	; 2 bytes @ 0x2
   799                           	global	___wmul@multiplicand
   800  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   801  0022                     	ds	1
   802                           	global	lcd_display@d
   803  0023                     lcd_display@d:	; 1 bytes @ 0x3
   804  0023                     	ds	1
   805                           	global	___awdiv@counter
   806  0024                     ___awdiv@counter:	; 1 bytes @ 0x4
   807                           	global	lcd_display@e
   808  0024                     lcd_display@e:	; 2 bytes @ 0x4
   809                           	global	___lwdiv@quotient
   810  0024                     ___lwdiv@quotient:	; 2 bytes @ 0x4
   811  0024                     	ds	1
   812                           	global	___awdiv@sign
   813  0025                     ___awdiv@sign:	; 1 bytes @ 0x5
   814  0025                     	ds	1
   815                           	global	___lwdiv@counter
   816  0026                     ___lwdiv@counter:	; 1 bytes @ 0x6
   817                           	global	___awdiv@quotient
   818  0026                     ___awdiv@quotient:	; 2 bytes @ 0x6
   819  0026                     	ds	1
   820                           	global	?___lwdiv
   821  0027                     ?___lwdiv: ;@ 0x7
   822                           	global	___lwdiv@dividend
   823  0027                     ___lwdiv@dividend:	; 2 bytes @ 0x7
   824  0027                     	ds	1
   825                           	global	?___awdiv
   826  0028                     ?___awdiv: ;@ 0x8
   827                           	global	___awdiv@dividend
   828  0028                     ___awdiv@dividend:	; 2 bytes @ 0x8
   829  0028                     	ds	1
   830                           	global	___lwdiv@divisor
   831  0029                     ___lwdiv@divisor:	; 2 bytes @ 0x9
   832  0029                     	ds	1
   833                           	global	___awdiv@divisor
   834  002A                     ___awdiv@divisor:	; 2 bytes @ 0xA
   835  002A                     	ds	2
   836                           	global	??_main
   837  002C                     ??_main: ;@ 0xC
   838  002C                     	ds	3
   839                           	global	_main$744
   840  002F                     _main$744:	; 2 bytes @ 0xF
   841  002F                     	ds	2
   842+                          	global	main@Celsius
   843+ 0031                     main@Celsius:	; 2 bytes @ 0x11
   844+ 0031                     	ds	2
   845                           ;Data sizes: Strings 22, constant 0, data 0, bss 10, persistent 0 stack 0
   846                           ;Auto spaces:   Size  Autos    Used
   847                           ; COMMON          14      5      11
   848                           ; BANK0           80     19      23
   849                           ; BANK1           80      0       0
   850                           ; BANK3           96      0       0
   851                           ; BANK2           96      0       0
   852                           
   853                           
   854                           ;Pointer list with targets:
   855                           
   856                           ;lcd_display@d	PTR const unsigned char  size(1); Largest target is 14
   857                           ;		 -> STR_1(CODE[8]), STR_2(CODE[14]), 
   858                           ;?___awdiv	int  size(1); Largest target is 0
   859                           ;?___wmul	unsigned int  size(1); Largest target is 0
   860                           ;?___lwmod	unsigned int  size(1); Largest target is 0
   861                           ;?___lwdiv	unsigned int  size(1); Largest target is 0
   862                           
   863                           
   864                           ;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   865                           
   866                           
   867                           ;Call graph:                      Base Space Used Autos Args Refs Density
   868                           ;_main                                                7    0 1108   0.00
   869                           ;                                   12 BANK0    7
   870                           ;           _lcd_init
   871                           ;              _delay
   872                           ;            _lcd_cmd
   873                           ;        _lcd_display
   874                           ;             ___wmul
   875                           ;            ___awdiv
   876                           ;            ___lwdiv
   877                           ;            ___lwmod
   878                           ;           _lcd_data
   879                           ;  ___awdiv                                           5    4  290   0.00
   880                           ;                                    2 COMMO    1
   881                           ;                                    4 BANK0    8
   882                           ;             ___wmul (ARG)
   883                           ;  ___wmul                                            2    4   68   0.00
   884                           ;                                    0 COMMO    2
   885                           ;                                    0 BANK0    4
   886                           ;  ___lwmod                                           2    4  117   0.00
   887                           ;                                    0 COMMO    2
   888                           ;                                    0 BANK0    4
   889                           ;  ___lwdiv                                           4    4  237   0.00
   890                           ;                                    2 COMMO    1
   891                           ;                                    4 BANK0    7
   892                           ;            ___lwmod (ARG)
   893                           ;  _lcd_init                                          0    0   65   0.00
   894                           ;            _lcd_cmd
   895                           ;  _lcd_display                                       3    0  131   0.00
   896                           ;                                    3 BANK0    3
   897                           ;           _lcd_data
   898                           ;    _lcd_cmd                                         6    0   65   0.00
   899                           ;                                    2 COMMO    3
   900                           ;                                    0 BANK0    3
   901                           ;              _delay
   902                           ;    _lcd_data                                        6    0   65   0.00
   903                           ;                                    2 COMMO    3
   904                           ;                                    0 BANK0    3
   905                           ;              _delay
   906                           ;      _delay                                         0    2   16   0.00
   907                           ;                                    0 COMMO    2
   908                           ; Estimated maximum call depth 3
   909                           ; Address spaces:
   910                           
   911                           ;Name               Size   Autos  Total    Cost      Usage
   912                           ;BITCOMMON            E      0       0       0        0.0%
   913                           ;CODE                 0      0       0       0        0.0%
   914                           ;NULL                 0      0       0       0        0.0%
   915                           ;COMMON               E      5       B       1       78.6%
   916                           ;SFR0                 0      0       0       1        0.0%
   917                           ;BITSFR0              0      0       0       1        0.0%
   918                           ;BITSFR1              0      0       0       2        0.0%
   919                           ;SFR1                 0      0       0       2        0.0%
   920                           ;ABS                  0      0      22       2        0.0%
   921                           ;STACK                0      0       0       3        0.0%
   922                           ;BITBANK0            50      0       0       4        0.0%
   923                           ;SFR3                 0      0       0       4        0.0%
   924                           ;BITSFR3              0      0       0       4        0.0%
   925                           ;BANK0               50     13      17       5       28.8%
   926                           ;BITSFR2              0      0       0       5        0.0%
   927                           ;SFR2                 0      0       0       5        0.0%
   928                           ;BITBANK1            50      0       0       6        0.0%
   929                           ;BANK1               50      0       0       7        0.0%
   930                           ;BITBANK3            60      0       0       8        0.0%
   931                           ;BANK3               60      0       0       9        0.0%
   932                           ;BITBANK2            60      0       0      10        0.0%
   933                           ;BANK2               60      0       0      11        0.0%
   934                           ;DATA                 0      0      22      12        0.0%
   935                           ;EEDATA             100      0       0    1000        0.0%
   936                           
   937                           	global	_main
   938                           psect	maintext,local,class=CODE,delta=2
   939                           global __pmaintext
   940  06B4                     __pmaintext:
   941                           
   942                           ; *************** function _main *****************
   943                           ; Defined at:
   944                           ;		line 67 in file "C:\Users\Satheesh M\Documents\Body Temperature using PIC16F877A\MPLA
                                 B\lm35.c"
   945                           ; Parameters:    Size  Location     Type
   946                           ;		None
   947                           ; Auto vars:     Size  Location     Type
   948                           ;  Celsius         2   17[BANK0 ] int 
   949                           ; Return value:  Size  Location     Type
   950                           ;		None               void
   951                           ; Registers used:
   952                           ;		wreg, status,2, status,0, pclath, cstack
   953                           ; Tracked objects:
   954                           ;		On entry : 17F/0
   955                           ;		On exit  : 0/0
   956                           ;		Unchanged: 0/0
   957                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   958                           ;      Locals:         0       7       0       0       0
   959                           ;      Temp:     3
   960                           ;      Total:    7
   961                           ; This function calls:
   962                           ;		_lcd_init
   963                           ;		_delay
   964                           ;		_lcd_cmd
   965                           ;		_lcd_display
   966                           ;		___wmul
   967                           ;		___awdiv
   968                           ;		___lwdiv
   969                           ;		___lwmod
   970                           ;		_lcd_data
   971                           ; This function is called by:
   972                           ;		Startup code after reset
   973                           ; This function uses a non-reentrant model
   974                           ; 
   975                           psect	maintext
   976                           	file	"C:\Users\Satheesh M\Documents\Body Temperature using PIC16F877A\MPLAB\lm35.c"
   977                           	line	67
   978                           	global	__size_of_main
   979  014C                     	__size_of_main	equ	__end_of_main-_main
   980                           ;lm35.c: 67: void main() {
   981                           	
   982  06B4                     _main:	
   983                           	opt stack 7
   984                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   985                           	line	68
   986                           	
   987  06B4                     l30000648:	
   988                           ;lm35.c: 68: ADCON0 = 0X40;
   989  06B4  3040               	movlw	(040h)
   990  06B5  009F               	movwf	(31)	;volatile
   991                           	line	69
   992                           ;lm35.c: 69: ADCON1 = 0X8E;
   993  06B6  308E               	movlw	(08Eh)
   994  06B7  1683               	bsf	status, 5	;RP0=1, select bank1
   995  06B8  1303               	bcf	status, 6	;RP1=0, select bank1
   996  06B9  009F               	movwf	(159)^080h	;volatile
   997                           	
   998  06BA                     l30000649:	
   999                           	line	70
  1000                           ;lm35.c: 70: TRISD = 0x00;
  1001  06BA  1003               	clrc
  1002  06BB  3000               	movlw	0
  1003  06BC  1803               	btfsc	status,0
  1004  06BD  3001               	movlw	1
  1005  06BE  0088               	movwf	(136)^080h	;volatile
  1006                           	
  1007  06BF                     l30000650:	
  1008                           	line	71
  1009                           ;lm35.c: 71: PORTD = 0x00;
  1010  06BF  1003               	clrc
  1011  06C0  3000               	movlw	0
  1012  06C1  1803               	btfsc	status,0
  1013  06C2  3001               	movlw	1
  1014  06C3  1283               	bcf	status, 5	;RP0=0, select bank0
  1015  06C4  1303               	bcf	status, 6	;RP1=0, select bank0
  1016  06C5  0088               	movwf	(8)	;volatile
  1017                           	
  1018  06C6                     l30000651:	
  1019                           	line	72
  1020                           ;lm35.c: 72: lcd_init();
  1021  06C6  120A  118A  2425   	fcall	_lcd_init
              120A  118A         
  1022                           	
  1023  06CB                     l30000652:	
  1024                           	line	73
  1025                           ;lm35.c: 73: delay(200);
  1026  06CB  30C8               	movlw	low(0C8h)
  1027  06CC  00F6               	movwf	(?_delay)
  1028  06CD  3000               	movlw	high(0C8h)
  1029  06CE  00F7               	movwf	((?_delay))+1
  1030  06CF  120A  118A  2444   	fcall	_delay
              120A  118A         
  1031                           	
  1032  06D4                     l30000653:	
  1033                           	line	74
  1034                           ;lm35.c: 74: lcd_cmd(0x80);
  1035  06D4  3080               	movlw	(080h)
  1036  06D5  120A  118A  2588   	fcall	_lcd_cmd
              120A  118A         
  1037                           	
  1038  06DA                     l30000654:	
  1039                           	line	75
  1040                           ;lm35.c: 75: lcd_display("WELCOME");
  1041  06DA  300F               	movlw	((STR_1-__stringbase))&0ffh
  1042  06DB  120A  118A  24FE   	fcall	_lcd_display
              120A  118A         
  1043                           	
  1044  06E0                     l30000655:	
  1045                           	line	76
  1046                           ;lm35.c: 76: delay(50000);
  1047  06E0  3050               	movlw	low(0C350h)
  1048  06E1  00F6               	movwf	(?_delay)
  1049  06E2  30C3               	movlw	high(0C350h)
  1050  06E3  00F7               	movwf	((?_delay))+1
  1051  06E4  120A  118A  2444   	fcall	_delay
              120A  118A         
  1052                           	
  1053  06E9                     l30000656:	
  1054                           	line	80
  1055                           ;lm35.c: 80: CHS2 = 0;
  1056  06E9  1283               	bcf	status, 5	;RP0=0, select bank0
  1057  06EA  1303               	bcf	status, 6	;RP1=0, select bank0
  1058  06EB  129F               	bcf	(253/8),(253)&7
  1059                           	
  1060  06EC                     l30000657:	
  1061                           	line	81
  1062                           ;lm35.c: 81: CHS1 = 0;
  1063  06EC  121F               	bcf	(252/8),(252)&7
  1064                           	
  1065  06ED                     l30000658:	
  1066                           	line	82
  1067                           ;lm35.c: 82: CHS0 = 0;
  1068  06ED  119F               	bcf	(251/8),(251)&7
  1069                           	
  1070  06EE                     l30000659:	
  1071                           	line	83
  1072                           ;lm35.c: 83: ADON = 1;
  1073  06EE  141F               	bsf	(248/8),(248)&7
  1074                           	
  1075  06EF                     l30000660:	
  1076                           	line	84
  1077                           ;lm35.c: 84: delay(600);
  1078  06EF  3058               	movlw	low(0258h)
  1079  06F0  00F6               	movwf	(?_delay)
  1080  06F1  3002               	movlw	high(0258h)
  1081  06F2  00F7               	movwf	((?_delay))+1
  1082  06F3  120A  118A  2444   	fcall	_delay
              120A  118A         
  1083                           	
  1084  06F8                     l30000661:	
  1085                           	line	85
  1086                           ;lm35.c: 85: ADCON0 = (ADCON0 + 0X04);
  1087  06F8  1283               	bcf	status, 5	;RP0=0, select bank0
  1088  06F9  1303               	bcf	status, 6	;RP1=0, select bank0
  1089  06FA  081F               	movf	(31),w	;volatile
  1090  06FB  3E04               	addlw	04h
  1091  06FC  009F               	movwf	(31)	;volatile
  1092                           	
  1093  06FD                     l30000662:	
  1094                           	line	86
  1095                           ;lm35.c: 86: delay(600);
  1096  06FD  3058               	movlw	low(0258h)
  1097  06FE  00F6               	movwf	(?_delay)
  1098  06FF  3002               	movlw	high(0258h)
  1099  0700  00F7               	movwf	((?_delay))+1
  1100  0701  120A  118A  2444   	fcall	_delay
              120A  118A         
  1101                           	
  1102  0706                     l30000663:	
  1103                           	line	87
  1104                           ;lm35.c: 87: A = ADRESH << 8;
  1105  0706  1283               	bcf	status, 5	;RP0=0, select bank0
  1106  0707  1303               	bcf	status, 6	;RP1=0, select bank0
  1107  0708  081E               	movf	(30),w	;volatile
  1108  0709  00AC               	movwf	(??_main+0+0)
  1109  070A  01AD               	clrf	(??_main+0+0+1)
  1110  070B  3008               	movlw	08h
  1111  070C  00AE               	movwf	(??_main+2+0)
  1112  070D                     u675:
  1113  070D  1003               	clrc
  1114  070E  0DAC               	rlf	(??_main+0+0),f
  1115  070F  0DAD               	rlf	(??_main+0+1),f
  1116  0710  0BAE               	decfsz	(??_main+2+0),f
  1117  0711  2F0D               	goto	u675
  1118  0712  082C               	movf	0+(??_main+0+0),w
  1119  0713  00F0               	movwf	(_A)
  1120  0714  082D               	movf	1+(??_main+0+0),w
  1121  0715  00F1               	movwf	(_A+1)
  1122                           	
  1123  0716                     l30000664:	
  1124                           	line	88
  1125                           ;lm35.c: 88: delay(600);
  1126  0716  3058               	movlw	low(0258h)
  1127  0717  00F6               	movwf	(?_delay)
  1128  0718  3002               	movlw	high(0258h)
  1129  0719  00F7               	movwf	((?_delay))+1
  1130  071A  120A  118A  2444   	fcall	_delay
              120A  118A         
  1131                           	
  1132  071F                     l30000665:	
  1133                           	line	89
  1134                           ;lm35.c: 89: A = (A + ADRESL);
  1135  071F  1683               	bsf	status, 5	;RP0=1, select bank1
  1136  0720  1303               	bcf	status, 6	;RP1=0, select bank1
  1137  0721  081E               	movf	(158)^080h,w	;volatile
  1138  0722  0770               	addwf	(_A),w
  1139  0723  00F0               	movwf	(_A)
  1140  0724  0871               	movf	(_A+1),w
  1141  0725  1803               	skipnc
  1142  0726  0A71               	incf	(_A+1),w
  1143  0727  00F1               	movwf	((_A))+1
  1144                           	
  1145  0728                     l30000666:	
  1146                           	line	91
  1147                           ;lm35.c: 91: int Celsius = A / 2;
  1148  0728  0871               	movf	(_A+1),w
  1149  0729  1283               	bcf	status, 5	;RP0=0, select bank0
  1150  072A  1303               	bcf	status, 6	;RP1=0, select bank0
  1151  072B  00AD               	movwf	(??_main+0+0+1)
  1152  072C  0870               	movf	(_A),w
  1153  072D  00AC               	movwf	(??_main+0+0)
  1154  072E  3001               	movlw	01h
  1155  072F                     u685:
  1156  072F  1003               	clrc
  1157  0730  0CAD               	rrf	(??_main+0+1),f
  1158  0731  0CAC               	rrf	(??_main+0+0),f
  1159  0732  3EFF               	addlw	-1
  1160  0733  1D03               	skipz
  1161  0734  2F2F               	goto	u685
  1162  0735  082C               	movf	0+(??_main+0+0),w
  1163  0736  00B1               	movwf	(main@Celsius)
  1164  0737  082D               	movf	1+(??_main+0+0),w
  1165  0738  00B2               	movwf	(main@Celsius+1)
  1166                           	
  1167  0739                     l30000667:	
  1168                           	line	92
  1169                           ;lm35.c: 92: B = ((Celsius * 9) / 5) + 32;
  1170  0739  0832               	movf	(main@Celsius+1),w
  1171  073A  01A1               	clrf	(?___wmul+1)
  1172  073B  07A1               	addwf	(?___wmul+1)
  1173  073C  0831               	movf	(main@Celsius),w
  1174  073D  01A0               	clrf	(?___wmul)
  1175  073E  07A0               	addwf	(?___wmul)
  1176                           
  1177  073F  3009               	movlw	low(09h)
  1178  0740  00A2               	movwf	0+(?___wmul)+02h
  1179  0741  3000               	movlw	high(09h)
  1180  0742  00A3               	movwf	(0+(?___wmul)+02h)+1
  1181  0743  120A  118A  2527   	fcall	___wmul
              120A  118A         
  1182  0748  1383               	bcf	status, 7	;select IRP bank0
  1183  0749  1283               	bcf	status, 5	;RP0=0, select bank0
  1184  074A  1303               	bcf	status, 6	;RP1=0, select bank0
  1185  074B  0821               	movf	(1+(?___wmul)),w
  1186  074C  01A9               	clrf	(?___awdiv+1)
  1187  074D  07A9               	addwf	(?___awdiv+1)
  1188  074E  0820               	movf	(0+(?___wmul)),w
  1189  074F  01A8               	clrf	(?___awdiv)
  1190  0750  07A8               	addwf	(?___awdiv)
  1191                           
  1192  0751  3005               	movlw	low(05h)
  1193  0752  00AA               	movwf	0+(?___awdiv)+02h
  1194  0753  3000               	movlw	high(05h)
  1195  0754  00AB               	movwf	(0+(?___awdiv)+02h)+1
  1196  0755  120A  118A  2642   	fcall	___awdiv
              120A  118A         
  1197  075A  1383               	bcf	status, 7	;select IRP bank0
  1198  075B  1283               	bcf	status, 5	;RP0=0, select bank0
  1199  075C  1303               	bcf	status, 6	;RP1=0, select bank0
  1200  075D  0828               	movf	(0+(?___awdiv)),w
  1201  075E  3E20               	addlw	low(020h)
  1202  075F  00F2               	movwf	(_B)
  1203  0760  0829               	movf	(1+(?___awdiv)),w
  1204  0761  1803               	skipnc
  1205  0762  3E01               	addlw	1
  1206  0763  3E00               	addlw	high(020h)
  1207+ 0764  00F3               	movwf	1+(_B)
  1208+                          	
  1209+ 0765                     l30000668:	
  1210                           	line	93
  1211                           ;lm35.c: 93: C = B / 100;
  1212  0765  0873               	movf	(_B+1),w
  1213  0766  01A8               	clrf	(?___lwdiv+1)
  1214  0767  07A8               	addwf	(?___lwdiv+1)
  1215  0768  0872               	movf	(_B),w
  1216  0769  01A7               	clrf	(?___lwdiv)
  1217  076A  07A7               	addwf	(?___lwdiv)
  1218                           
  1219  076B  3064               	movlw	low(064h)
  1220  076C  00A9               	movwf	0+(?___lwdiv)+02h
  1221  076D  3000               	movlw	high(064h)
  1222  076E  00AA               	movwf	(0+(?___lwdiv)+02h)+1
  1223  076F  120A  118A  25F7   	fcall	___lwdiv
              120A  118A         
  1224  0774  1383               	bcf	status, 7	;select IRP bank0
  1225  0775  1283               	bcf	status, 5	;RP0=0, select bank0
  1226  0776  1303               	bcf	status, 6	;RP1=0, select bank0
  1227  0777  0828               	movf	(1+(?___lwdiv)),w
  1228  0778  01B4               	clrf	(_C+1)
  1229  0779  07B4               	addwf	(_C+1)
  1230  077A  0827               	movf	(0+(?___lwdiv)),w
  1231  077B  01B3               	clrf	(_C)
  1232  077C  07B3               	addwf	(_C)
  1233                           
  1234                           	
  1235  077D                     l30000669:	
  1236                           	line	94
  1237                           ;lm35.c: 94: D = (B % 100) / 10;
  1238  077D  0873               	movf	(_B+1),w
  1239  077E  01A1               	clrf	(?___lwmod+1)
  1240  077F  07A1               	addwf	(?___lwmod+1)
  1241  0780  0872               	movf	(_B),w
  1242  0781  01A0               	clrf	(?___lwmod)
  1243  0782  07A0               	addwf	(?___lwmod)
  1244                           
  1245  0783  3064               	movlw	low(064h)
  1246  0784  00A2               	movwf	0+(?___lwmod)+02h
  1247  0785  3000               	movlw	high(064h)
  1248  0786  00A3               	movwf	(0+(?___lwmod)+02h)+1
  1249  0787  120A  118A  25BE   	fcall	___lwmod
              120A  118A         
  1250  078C  1383               	bcf	status, 7	;select IRP bank0
  1251  078D  1283               	bcf	status, 5	;RP0=0, select bank0
  1252  078E  1303               	bcf	status, 6	;RP1=0, select bank0
  1253  078F  0821               	movf	(1+(?___lwmod)),w
  1254  0790  01A8               	clrf	(?___lwdiv+1)
  1255  0791  07A8               	addwf	(?___lwdiv+1)
  1256  0792  0820               	movf	(0+(?___lwmod)),w
  1257  0793  01A7               	clrf	(?___lwdiv)
  1258  0794  07A7               	addwf	(?___lwdiv)
  1259                           
  1260  0795  300A               	movlw	low(0Ah)
  1261  0796  00A9               	movwf	0+(?___lwdiv)+02h
  1262  0797  3000               	movlw	high(0Ah)
  1263  0798  00AA               	movwf	(0+(?___lwdiv)+02h)+1
  1264  0799  120A  118A  25F7   	fcall	___lwdiv
              120A  118A         
  1265  079E  1383               	bcf	status, 7	;select IRP bank0
  1266  079F  1283               	bcf	status, 5	;RP0=0, select bank0
  1267  07A0  1303               	bcf	status, 6	;RP1=0, select bank0
  1268  07A1  0828               	movf	(1+(?___lwdiv)),w
  1269  07A2  01B6               	clrf	(_D+1)
  1270  07A3  07B6               	addwf	(_D+1)
  1271  07A4  0827               	movf	(0+(?___lwdiv)),w
  1272  07A5  01B5               	clrf	(_D)
  1273  07A6  07B5               	addwf	(_D)
  1274                           
  1275                           	
  1276  07A7                     l30000670:	
  1277                           	line	103
  1278  07A7  0873               	movf	(_B+1),w
  1279  07A8  01A1               	clrf	(?___lwmod+1)
  1280  07A9  07A1               	addwf	(?___lwmod+1)
  1281  07AA  0872               	movf	(_B),w
  1282  07AB  01A0               	clrf	(?___lwmod)
  1283  07AC  07A0               	addwf	(?___lwmod)
  1284                           
  1285  07AD  3064               	movlw	low(064h)
  1286  07AE  00A2               	movwf	0+(?___lwmod)+02h
  1287  07AF  3000               	movlw	high(064h)
  1288  07B0  00A3               	movwf	(0+(?___lwmod)+02h)+1
  1289  07B1  120A  118A  25BE   	fcall	___lwmod
              120A  118A         
  1290  07B6  1383               	bcf	status, 7	;select IRP bank0
  1291  07B7  1283               	bcf	status, 5	;RP0=0, select bank0
  1292  07B8  1303               	bcf	status, 6	;RP1=0, select bank0
  1293  07B9  0821               	movf	(1+(?___lwmod)),w
  1294  07BA  01B0               	clrf	(_main$744+1)
  1295  07BB  07B0               	addwf	(_main$744+1)
  1296  07BC  0820               	movf	(0+(?___lwmod)),w
  1297  07BD  01AF               	clrf	(_main$744)
  1298  07BE  07AF               	addwf	(_main$744)
  1299                           
  1300                           	
  1301  07BF                     l30000671:	
  1302                           	line	95
  1303                           ;lm35.c: 95: E = (B % 100) % 10;
  1304  07BF  0830               	movf	(_main$744+1),w
  1305  07C0  01A1               	clrf	(?___lwmod+1)
  1306  07C1  07A1               	addwf	(?___lwmod+1)
  1307  07C2  082F               	movf	(_main$744),w
  1308  07C3  01A0               	clrf	(?___lwmod)
  1309  07C4  07A0               	addwf	(?___lwmod)
  1310                           
  1311  07C5  300A               	movlw	low(0Ah)
  1312  07C6  00A2               	movwf	0+(?___lwmod)+02h
  1313  07C7  3000               	movlw	high(0Ah)
  1314  07C8  00A3               	movwf	(0+(?___lwmod)+02h)+1
  1315  07C9  120A  118A  25BE   	fcall	___lwmod
              120A  118A         
  1316  07CE  1383               	bcf	status, 7	;select IRP bank0
  1317  07CF  1283               	bcf	status, 5	;RP0=0, select bank0
  1318  07D0  1303               	bcf	status, 6	;RP1=0, select bank0
  1319  07D1  0821               	movf	(1+(?___lwmod)),w
  1320  07D2  01F5               	clrf	(_E+1)
  1321  07D3  07F5               	addwf	(_E+1)
  1322  07D4  0820               	movf	(0+(?___lwmod)),w
  1323  07D5  01F4               	clrf	(_E)
  1324  07D6  07F4               	addwf	(_E)
  1325                           
  1326                           	
  1327  07D7                     l30000672:	
  1328                           	line	97
  1329                           ;lm35.c: 97: lcd_cmd(0xC0);
  1330  07D7  30C0               	movlw	(0C0h)
  1331  07D8  120A  118A  2588   	fcall	_lcd_cmd
              120A  118A         
  1332                           	
  1333  07DD                     l30000673:	
  1334                           	line	98
  1335                           ;lm35.c: 98: lcd_display("Body Temp(F) ");
  1336  07DD  3001               	movlw	((STR_2-__stringbase))&0ffh
  1337  07DE  120A  118A  24FE   	fcall	_lcd_display
              120A  118A         
  1338                           	
  1339  07E3                     l30000674:	
  1340                           	line	99
  1341                           ;lm35.c: 99: lcd_data(C + 0x30);
  1342  07E3  1283               	bcf	status, 5	;RP0=0, select bank0
  1343  07E4  1303               	bcf	status, 6	;RP1=0, select bank0
  1344  07E5  0833               	movf	(_C),w
  1345  07E6  3E30               	addlw	030h
  1346  07E7  120A  118A  2552   	fcall	_lcd_data
              120A  118A         
  1347                           	
  1348  07EC                     l30000675:	
  1349                           	line	100
  1350                           ;lm35.c: 100: lcd_data(D + 0x30);
  1351  07EC  1283               	bcf	status, 5	;RP0=0, select bank0
  1352  07ED  1303               	bcf	status, 6	;RP1=0, select bank0
  1353  07EE  0835               	movf	(_D),w
  1354  07EF  3E30               	addlw	030h
  1355  07F0  120A  118A  2552   	fcall	_lcd_data
              120A  118A         
  1356                           	
  1357  07F5                     l30000676:	
  1358                           	line	101
  1359                           ;lm35.c: 101: lcd_data(E + 0x30);
  1360  07F5  0874               	movf	(_E),w
  1361  07F6  3E30               	addlw	030h
  1362  07F7  120A  118A  2552   	fcall	_lcd_data
              120A  118A         
  1363  07FC  2EE9               	goto	l30000656
  1364                           	global	start
  1365  07FD  120A  118A  2800   	ljmp	start
  1366                           	opt stack 0
  1367                           GLOBAL	__end_of_main
  1368  0800                     	__end_of_main:
  1369                           ; =============== function _main ends ============
  1370                           
  1371                           psect	maintext
  1372                           	line	103
  1373                           	signat	_main,88
  1374                           	global	___awdiv
  1375                           psect	text65,local,class=CODE,delta=2
  1376                           global __ptext65
  1377  0642                     __ptext65:
  1378                           
  1379                           ; *************** function ___awdiv *****************
  1380                           ; Defined at:
  1381                           ;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\awdiv.c"
  1382                           ; Parameters:    Size  Location     Type
  1383                           ;  dividend        2    8[BANK0 ] int 
  1384                           ;  divisor         2   10[BANK0 ] int 
  1385                           ; Auto vars:     Size  Location     Type
  1386                           ;  quotient        2    6[BANK0 ] int 
  1387                           ;  sign            1    5[BANK0 ] unsigned char 
  1388                           ;  counter         1    4[BANK0 ] unsigned char 
  1389                           ; Return value:  Size  Location     Type
  1390                           ;                  2    8[BANK0 ] int 
  1391                           ; Registers used:
  1392                           ;		wreg, status,2, status,0
  1393                           ; Tracked objects:
  1394                           ;		On entry : 0/0
  1395                           ;		On exit  : 0/0
  1396                           ;		Unchanged: 0/0
  1397                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1398                           ;      Locals:         1       8       0       0       0
  1399                           ;      Temp:     1
  1400                           ;      Total:    9
  1401                           ; This function calls:
  1402                           ; This function is called by:
  1403                           ;		_main
  1404                           ; This function uses a non-reentrant model
  1405                           ; 
  1406                           psect	text65
  1407                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\awdiv.c"
  1408                           	line	5
  1409                           	global	__size_of___awdiv
  1410  0072                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  1411                           	
  1412  0642                     ___awdiv:	
  1413                           	opt stack 6
  1414                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1415                           	line	9
  1416                           	
  1417  0642                     l30000622:	
  1418  0642  1003               	clrc
  1419  0643  3000               	movlw	0
  1420  0644  1803               	btfsc	status,0
  1421  0645  3001               	movlw	1
  1422  0646  1283               	bcf	status, 5	;RP0=0, select bank0
  1423  0647  1303               	bcf	status, 6	;RP1=0, select bank0
  1424  0648  00A5               	movwf	(___awdiv@sign)
  1425                           	
  1426  0649                     l30000623:	
  1427                           	line	10
  1428  0649  1FAB               	btfss	(___awdiv@divisor+1),7
  1429  064A  2E4C               	goto	u571
  1430  064B  2E4D               	goto	u570
  1431  064C                     u571:
  1432  064C  2E55               	goto	l30000625
  1433  064D                     u570:
  1434                           	
  1435  064D                     l30000624:	
  1436                           	line	11
  1437  064D  09AA               	comf	(___awdiv@divisor),f
  1438  064E  09AB               	comf	(___awdiv@divisor+1),f
  1439  064F  0AAA               	incf	(___awdiv@divisor),f
  1440  0650  1903               	skipnz
  1441  0651  0AAB               	incf	(___awdiv@divisor+1),f
  1442                           	line	12
  1443  0652  01A5               	clrf	(___awdiv@sign)
  1444  0653  1403               	bsf	status,0
  1445  0654  0DA5               	rlf	(___awdiv@sign),f
  1446                           	
  1447  0655                     l30000625:	
  1448                           	line	14
  1449  0655  1FA9               	btfss	(___awdiv@dividend+1),7
  1450  0656  2E58               	goto	u581
  1451  0657  2E59               	goto	u580
  1452  0658                     u581:
  1453  0658  2E62               	goto	l168
  1454  0659                     u580:
  1455                           	
  1456  0659                     l30000626:	
  1457                           	line	15
  1458  0659  09A8               	comf	(___awdiv@dividend),f
  1459  065A  09A9               	comf	(___awdiv@dividend+1),f
  1460  065B  0AA8               	incf	(___awdiv@dividend),f
  1461  065C  1903               	skipnz
  1462  065D  0AA9               	incf	(___awdiv@dividend+1),f
  1463                           	
  1464  065E                     l30000627:	
  1465                           	line	16
  1466  065E  3001               	movlw	(01h)
  1467  065F  00F8               	movwf	(??___awdiv+0+0)
  1468  0660  0878               	movf	(??___awdiv+0+0),w
  1469  0661  06A5               	xorwf	(___awdiv@sign),f
  1470                           	
  1471  0662                     l168:	
  1472                           	line	18
  1473  0662  3000               	movlw	low(0)
  1474  0663  00A6               	movwf	(___awdiv@quotient)
  1475  0664  3000               	movlw	high(0)
  1476  0665  00A7               	movwf	((___awdiv@quotient))+1
  1477                           	line	19
  1478  0666  082B               	movf	(___awdiv@divisor+1),w
  1479  0667  042A               	iorwf	(___awdiv@divisor),w
  1480  0668  1903               	skipnz
  1481  0669  2E6B               	goto	u591
  1482  066A  2E6C               	goto	u590
  1483  066B                     u591:
  1484  066B  2EA4               	goto	l30000637
  1485  066C                     u590:
  1486                           	
  1487  066C                     l30000628:	
  1488                           	line	20
  1489  066C  01A4               	clrf	(___awdiv@counter)
  1490  066D  1403               	bsf	status,0
  1491  066E  0DA4               	rlf	(___awdiv@counter),f
  1492  066F  2E7B               	goto	l30000631
  1493                           	
  1494  0670                     l30000629:	
  1495                           	line	22
  1496  0670  3001               	movlw	01h
  1497  0671                     u605:
  1498  0671  1003               	clrc
  1499  0672  0DAA               	rlf	(___awdiv@divisor),f
  1500  0673  0DAB               	rlf	(___awdiv@divisor+1),f
  1501  0674  3EFF               	addlw	-1
  1502  0675  1D03               	skipz
  1503  0676  2E71               	goto	u605
  1504                           	
  1505  0677                     l30000630:	
  1506                           	line	23
  1507  0677  3001               	movlw	(01h)
  1508  0678  00F8               	movwf	(??___awdiv+0+0)
  1509  0679  0878               	movf	(??___awdiv+0+0),w
  1510  067A  07A4               	addwf	(___awdiv@counter),f
  1511                           	
  1512  067B                     l30000631:	
  1513                           	line	21
  1514  067B  1FAB               	btfss	(___awdiv@divisor+1),(15)&7
  1515  067C  2E7E               	goto	u611
  1516  067D  2E7F               	goto	u610
  1517  067E                     u611:
  1518  067E  2E70               	goto	l30000629
  1519  067F                     u610:
  1520                           	
  1521  067F                     l30000632:	
  1522                           	line	26
  1523  067F  3001               	movlw	01h
  1524  0680                     u625:
  1525  0680  1003               	clrc
  1526  0681  0DA6               	rlf	(___awdiv@quotient),f
  1527  0682  0DA7               	rlf	(___awdiv@quotient+1),f
  1528  0683  3EFF               	addlw	-1
  1529  0684  1D03               	skipz
  1530  0685  2E80               	goto	u625
  1531                           	line	27
  1532  0686  082B               	movf	(___awdiv@divisor+1),w
  1533  0687  0229               	subwf	(___awdiv@dividend+1),w
  1534  0688  1D03               	skipz
  1535  0689  2E8C               	goto	u635
  1536  068A  082A               	movf	(___awdiv@divisor),w
  1537  068B  0228               	subwf	(___awdiv@dividend),w
  1538  068C                     u635:
  1539  068C  1C03               	skipc
  1540  068D  2E8F               	goto	u631
  1541  068E  2E90               	goto	u630
  1542  068F                     u631:
  1543  068F  2E97               	goto	l30000635
  1544  0690                     u630:
  1545                           	
  1546  0690                     l30000633:	
  1547                           	line	28
  1548  0690  082A               	movf	(___awdiv@divisor),w
  1549  0691  02A8               	subwf	(___awdiv@dividend),f
  1550  0692  082B               	movf	(___awdiv@divisor+1),w
  1551  0693  1C03               	skipc
  1552  0694  03A9               	decf	(___awdiv@dividend+1),f
  1553  0695  02A9               	subwf	(___awdiv@dividend+1),f
  1554                           	
  1555  0696                     l30000634:	
  1556                           	line	29
  1557  0696  1426               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  1558                           	
  1559  0697                     l30000635:	
  1560                           	line	31
  1561  0697  3001               	movlw	01h
  1562  0698                     u645:
  1563  0698  1003               	clrc
  1564  0699  0CAB               	rrf	(___awdiv@divisor+1),f
  1565  069A  0CAA               	rrf	(___awdiv@divisor),f
  1566  069B  3EFF               	addlw	-1
  1567  069C  1D03               	skipz
  1568  069D  2E98               	goto	u645
  1569                           	
  1570  069E                     l30000636:	
  1571                           	line	32
  1572  069E  3001               	movlw	low(01h)
  1573  069F  02A4               	subwf	(___awdiv@counter),f
  1574  06A0  1D03               	btfss	status,2
  1575  06A1  2EA3               	goto	u651
  1576  06A2  2EA4               	goto	u650
  1577  06A3                     u651:
  1578  06A3  2E7F               	goto	l30000632
  1579  06A4                     u650:
  1580                           	
  1581  06A4                     l30000637:	
  1582                           	line	34
  1583  06A4  0825               	movf	(___awdiv@sign),w
  1584  06A5  1D03               	skipz
  1585  06A6  2EA8               	goto	u660
  1586  06A7  2EAD               	goto	l30000639
  1587  06A8                     u660:
  1588                           	
  1589  06A8                     l30000638:	
  1590                           	line	35
  1591  06A8  09A6               	comf	(___awdiv@quotient),f
  1592  06A9  09A7               	comf	(___awdiv@quotient+1),f
  1593  06AA  0AA6               	incf	(___awdiv@quotient),f
  1594  06AB  1903               	skipnz
  1595  06AC  0AA7               	incf	(___awdiv@quotient+1),f
  1596                           	
  1597  06AD                     l30000639:	
  1598                           	line	36
  1599  06AD  0827               	movf	(___awdiv@quotient+1),w
  1600  06AE  01A9               	clrf	(?___awdiv+1)
  1601  06AF  07A9               	addwf	(?___awdiv+1)
  1602  06B0  0826               	movf	(___awdiv@quotient),w
  1603  06B1  01A8               	clrf	(?___awdiv)
  1604  06B2  07A8               	addwf	(?___awdiv)
  1605                           
  1606                           	
  1607  06B3                     l166:	
  1608  06B3  0008               	return
  1609                           	opt stack 0
  1610                           GLOBAL	__end_of___awdiv
  1611  06B4                     	__end_of___awdiv:
  1612                           ; =============== function ___awdiv ends ============
  1613                           
  1614                           psect	text66,local,class=CODE,delta=2
  1615                           global __ptext66
  1616  0527                     __ptext66:
  1617                           	line	37
  1618                           	signat	___awdiv,8314
  1619                           	global	___wmul
  1620                           
  1621                           ; *************** function ___wmul *****************
  1622                           ; Defined at:
  1623                           ;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\wmul.c"
  1624                           ; Parameters:    Size  Location     Type
  1625                           ;  multiplier      2    0[BANK0 ] unsigned int 
  1626                           ;  multiplicand    2    2[BANK0 ] unsigned int 
  1627                           ; Auto vars:     Size  Location     Type
  1628                           ;  product         2    0[COMMON] unsigned int 
  1629                           ; Return value:  Size  Location     Type
  1630                           ;                  2    0[BANK0 ] unsigned int 
  1631                           ; Registers used:
  1632                           ;		wreg, status,2, status,0
  1633                           ; Tracked objects:
  1634                           ;		On entry : 0/0
  1635                           ;		On exit  : 0/0
  1636                           ;		Unchanged: 0/0
  1637                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1638                           ;      Locals:         2       4       0       0       0
  1639                           ;      Temp:     0
  1640                           ;      Total:    6
  1641                           ; This function calls:
  1642                           ;		Nothing
  1643                           ; This function is called by:
  1644                           ;		_main
  1645                           ; This function uses a non-reentrant model
  1646                           ; 
  1647                           psect	text66
  1648                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\wmul.c"
  1649                           	line	3
  1650                           	global	__size_of___wmul
  1651  002B                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  1652                           	
  1653  0527                     ___wmul:	
  1654                           	opt stack 6
  1655                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1656                           	line	4
  1657                           	
  1658  0527                     l30000595:	
  1659  0527  3000               	movlw	low(0)
  1660  0528  00F6               	movwf	(___wmul@product)
  1661  0529  3000               	movlw	high(0)
  1662  052A  00F7               	movwf	((___wmul@product))+1
  1663                           	
  1664  052B                     l30000596:	
  1665                           	line	7
  1666  052B  1283               	bcf	status, 5	;RP0=0, select bank0
  1667  052C  1303               	bcf	status, 6	;RP1=0, select bank0
  1668  052D  1C20               	btfss	(___wmul@multiplier),(0)&7
  1669  052E  2D30               	goto	u401
  1670  052F  2D31               	goto	u400
  1671  0530                     u401:
  1672  0530  2D37               	goto	l26
  1673  0531                     u400:
  1674                           	
  1675  0531                     l30000597:	
  1676                           	line	8
  1677  0531  0822               	movf	(___wmul@multiplicand),w
  1678  0532  07F6               	addwf	(___wmul@product),f
  1679  0533  1803               	skipnc
  1680  0534  0AF7               	incf	(___wmul@product+1),f
  1681  0535  0823               	movf	(___wmul@multiplicand+1),w
  1682  0536  07F7               	addwf	(___wmul@product+1),f
  1683                           	
  1684  0537                     l26:	
  1685                           	line	9
  1686  0537  3001               	movlw	01h
  1687  0538                     u415:
  1688  0538  1003               	clrc
  1689  0539  0DA2               	rlf	(___wmul@multiplicand),f
  1690  053A  0DA3               	rlf	(___wmul@multiplicand+1),f
  1691  053B  3EFF               	addlw	-1
  1692  053C  1D03               	skipz
  1693  053D  2D38               	goto	u415
  1694                           	
  1695  053E                     l30000598:	
  1696                           	line	10
  1697  053E  3001               	movlw	01h
  1698  053F                     u425:
  1699  053F  1003               	clrc
  1700  0540  0CA1               	rrf	(___wmul@multiplier+1),f
  1701  0541  0CA0               	rrf	(___wmul@multiplier),f
  1702  0542  3EFF               	addlw	-1
  1703  0543  1D03               	skipz
  1704  0544  2D3F               	goto	u425
  1705                           	line	11
  1706  0545  0821               	movf	((___wmul@multiplier+1)),w
  1707  0546  0420               	iorwf	((___wmul@multiplier)),w
  1708  0547  1D03               	skipz
  1709  0548  2D4A               	goto	u431
  1710  0549  2D4B               	goto	u430
  1711  054A                     u431:
  1712  054A  2D2B               	goto	l30000596
  1713  054B                     u430:
  1714                           	
  1715  054B                     l30000599:	
  1716                           	line	12
  1717  054B  0877               	movf	(___wmul@product+1),w
  1718  054C  01A1               	clrf	(?___wmul+1)
  1719  054D  07A1               	addwf	(?___wmul+1)
  1720  054E  0876               	movf	(___wmul@product),w
  1721  054F  01A0               	clrf	(?___wmul)
  1722  0550  07A0               	addwf	(?___wmul)
  1723                           
  1724                           	
  1725  0551                     l22:	
  1726  0551  0008               	return
  1727                           	opt stack 0
  1728                           GLOBAL	__end_of___wmul
  1729  0552                     	__end_of___wmul:
  1730                           ; =============== function ___wmul ends ============
  1731                           
  1732                           psect	text67,local,class=CODE,delta=2
  1733                           global __ptext67
  1734  05BE                     __ptext67:
  1735                           	line	13
  1736                           	signat	___wmul,8314
  1737                           	global	___lwmod
  1738                           
  1739                           ; *************** function ___lwmod *****************
  1740                           ; Defined at:
  1741                           ;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\lwmod.c"
  1742                           ; Parameters:    Size  Location     Type
  1743                           ;  dividend        2    0[BANK0 ] unsigned int 
  1744                           ;  divisor         2    2[BANK0 ] unsigned int 
  1745                           ; Auto vars:     Size  Location     Type
  1746                           ;  counter         1    1[COMMON] unsigned char 
  1747                           ; Return value:  Size  Location     Type
  1748                           ;                  2    0[BANK0 ] unsigned int 
  1749                           ; Registers used:
  1750                           ;		wreg, status,2, status,0
  1751                           ; Tracked objects:
  1752                           ;		On entry : 0/0
  1753                           ;		On exit  : 0/0
  1754                           ;		Unchanged: 0/0
  1755                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1756                           ;      Locals:         2       4       0       0       0
  1757                           ;      Temp:     1
  1758                           ;      Total:    6
  1759                           ; This function calls:
  1760                           ;		Nothing
  1761                           ; This function is called by:
  1762                           ;		_main
  1763                           ; This function uses a non-reentrant model
  1764                           ; 
  1765                           psect	text67
  1766                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\lwmod.c"
  1767                           	line	5
  1768                           	global	__size_of___lwmod
  1769  0039                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  1770                           	
  1771  05BE                     ___lwmod:	
  1772                           	opt stack 6
  1773                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1774                           	line	8
  1775                           	
  1776  05BE                     l30000601:	
  1777  05BE  1283               	bcf	status, 5	;RP0=0, select bank0
  1778  05BF  1303               	bcf	status, 6	;RP1=0, select bank0
  1779  05C0  0823               	movf	(___lwmod@divisor+1),w
  1780  05C1  0422               	iorwf	(___lwmod@divisor),w
  1781  05C2  1903               	skipnz
  1782  05C3  2DC5               	goto	u441
  1783  05C4  2DC6               	goto	u440
  1784  05C5                     u441:
  1785  05C5  2DF6               	goto	l37
  1786  05C6                     u440:
  1787                           	
  1788  05C6                     l30000602:	
  1789                           	line	9
  1790  05C6  01F7               	clrf	(___lwmod@counter)
  1791  05C7  1403               	bsf	status,0
  1792  05C8  0DF7               	rlf	(___lwmod@counter),f
  1793  05C9  2DD5               	goto	l30000605
  1794                           	
  1795  05CA                     l30000603:	
  1796                           	line	11
  1797  05CA  3001               	movlw	01h
  1798  05CB                     u455:
  1799  05CB  1003               	clrc
  1800  05CC  0DA2               	rlf	(___lwmod@divisor),f
  1801  05CD  0DA3               	rlf	(___lwmod@divisor+1),f
  1802  05CE  3EFF               	addlw	-1
  1803  05CF  1D03               	skipz
  1804  05D0  2DCB               	goto	u455
  1805                           	
  1806  05D1                     l30000604:	
  1807                           	line	12
  1808  05D1  3001               	movlw	(01h)
  1809  05D2  00F6               	movwf	(??___lwmod+0+0)
  1810  05D3  0876               	movf	(??___lwmod+0+0),w
  1811  05D4  07F7               	addwf	(___lwmod@counter),f
  1812                           	
  1813  05D5                     l30000605:	
  1814                           	line	10
  1815  05D5  1FA3               	btfss	(___lwmod@divisor+1),(15)&7
  1816  05D6  2DD8               	goto	u461
  1817  05D7  2DD9               	goto	u460
  1818  05D8                     u461:
  1819  05D8  2DCA               	goto	l30000603
  1820  05D9                     u460:
  1821                           	
  1822  05D9                     l30000606:	
  1823                           	line	15
  1824  05D9  0823               	movf	(___lwmod@divisor+1),w
  1825  05DA  0221               	subwf	(___lwmod@dividend+1),w
  1826  05DB  1D03               	skipz
  1827  05DC  2DDF               	goto	u475
  1828  05DD  0822               	movf	(___lwmod@divisor),w
  1829  05DE  0220               	subwf	(___lwmod@dividend),w
  1830  05DF                     u475:
  1831  05DF  1C03               	skipc
  1832  05E0  2DE2               	goto	u471
  1833  05E1  2DE3               	goto	u470
  1834  05E2                     u471:
  1835  05E2  2DE9               	goto	l30000608
  1836  05E3                     u470:
  1837                           	
  1838  05E3                     l30000607:	
  1839                           	line	16
  1840  05E3  0822               	movf	(___lwmod@divisor),w
  1841  05E4  02A0               	subwf	(___lwmod@dividend),f
  1842  05E5  0823               	movf	(___lwmod@divisor+1),w
  1843  05E6  1C03               	skipc
  1844  05E7  03A1               	decf	(___lwmod@dividend+1),f
  1845  05E8  02A1               	subwf	(___lwmod@dividend+1),f
  1846                           	
  1847  05E9                     l30000608:	
  1848                           	line	17
  1849  05E9  3001               	movlw	01h
  1850  05EA                     u485:
  1851  05EA  1003               	clrc
  1852  05EB  0CA3               	rrf	(___lwmod@divisor+1),f
  1853  05EC  0CA2               	rrf	(___lwmod@divisor),f
  1854  05ED  3EFF               	addlw	-1
  1855  05EE  1D03               	skipz
  1856  05EF  2DEA               	goto	u485
  1857                           	
  1858  05F0                     l30000609:	
  1859                           	line	18
  1860  05F0  3001               	movlw	low(01h)
  1861  05F1  02F7               	subwf	(___lwmod@counter),f
  1862  05F2  1D03               	btfss	status,2
  1863  05F3  2DF5               	goto	u491
  1864  05F4  2DF6               	goto	u490
  1865  05F5                     u491:
  1866  05F5  2DD9               	goto	l30000606
  1867  05F6                     u490:
  1868                           	
  1869  05F6                     l37:	
  1870                           	line	20
  1871                           	
  1872  05F6                     l36:	
  1873  05F6  0008               	return
  1874                           	opt stack 0
  1875                           GLOBAL	__end_of___lwmod
  1876  05F7                     	__end_of___lwmod:
  1877                           ; =============== function ___lwmod ends ============
  1878                           
  1879                           psect	text68,local,class=CODE,delta=2
  1880                           global __ptext68
  1881  05F7                     __ptext68:
  1882                           	line	21
  1883                           	signat	___lwmod,8314
  1884                           	global	___lwdiv
  1885                           
  1886                           ; *************** function ___lwdiv *****************
  1887                           ; Defined at:
  1888                           ;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\lwdiv.c"
  1889                           ; Parameters:    Size  Location     Type
  1890                           ;  dividend        2    7[BANK0 ] unsigned int 
  1891                           ;  divisor         2    9[BANK0 ] unsigned int 
  1892                           ; Auto vars:     Size  Location     Type
  1893                           ;  quotient        2    4[BANK0 ] unsigned int 
  1894                           ;  counter         1    6[BANK0 ] unsigned char 
  1895                           ; Return value:  Size  Location     Type
  1896                           ;                  2    7[BANK0 ] unsigned int 
  1897                           ; Registers used:
  1898                           ;		wreg, status,2, status,0
  1899                           ; Tracked objects:
  1900                           ;		On entry : 0/0
  1901                           ;		On exit  : 0/0
  1902                           ;		Unchanged: 0/0
  1903                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1904                           ;      Locals:         1       7       0       0       0
  1905                           ;      Temp:     1
  1906                           ;      Total:    8
  1907                           ; This function calls:
  1908                           ; This function is called by:
  1909                           ;		_main
  1910                           ; This function uses a non-reentrant model
  1911                           ; 
  1912                           psect	text68
  1913                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.70\sources\lwdiv.c"
  1914                           	line	5
  1915                           	global	__size_of___lwdiv
  1916  004B                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  1917                           	
  1918  05F7                     ___lwdiv:	
  1919                           	opt stack 6
  1920                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1921                           	line	9
  1922                           	
  1923  05F7                     l30000610:	
  1924  05F7  3000               	movlw	low(0)
  1925  05F8  1283               	bcf	status, 5	;RP0=0, select bank0
  1926  05F9  1303               	bcf	status, 6	;RP1=0, select bank0
  1927  05FA  00A4               	movwf	(___lwdiv@quotient)
  1928  05FB  3000               	movlw	high(0)
  1929  05FC  00A5               	movwf	((___lwdiv@quotient))+1
  1930                           	line	10
  1931  05FD  082A               	movf	(___lwdiv@divisor+1),w
  1932  05FE  0429               	iorwf	(___lwdiv@divisor),w
  1933  05FF  1903               	skipnz
  1934  0600  2E02               	goto	u501
  1935  0601  2E03               	goto	u500
  1936  0602                     u501:
  1937  0602  2E3B               	goto	l30000620
  1938  0603                     u500:
  1939                           	
  1940  0603                     l30000611:	
  1941                           	line	11
  1942  0603  01A6               	clrf	(___lwdiv@counter)
  1943  0604  1403               	bsf	status,0
  1944  0605  0DA6               	rlf	(___lwdiv@counter),f
  1945  0606  2E12               	goto	l30000614
  1946                           	
  1947  0607                     l30000612:	
  1948                           	line	13
  1949  0607  3001               	movlw	01h
  1950  0608                     u515:
  1951  0608  1003               	clrc
  1952  0609  0DA9               	rlf	(___lwdiv@divisor),f
  1953  060A  0DAA               	rlf	(___lwdiv@divisor+1),f
  1954  060B  3EFF               	addlw	-1
  1955  060C  1D03               	skipz
  1956  060D  2E08               	goto	u515
  1957                           	
  1958  060E                     l30000613:	
  1959                           	line	14
  1960  060E  3001               	movlw	(01h)
  1961  060F  00F8               	movwf	(??___lwdiv+0+0)
  1962  0610  0878               	movf	(??___lwdiv+0+0),w
  1963  0611  07A6               	addwf	(___lwdiv@counter),f
  1964                           	
  1965  0612                     l30000614:	
  1966                           	line	12
  1967  0612  1FAA               	btfss	(___lwdiv@divisor+1),(15)&7
  1968  0613  2E15               	goto	u521
  1969  0614  2E16               	goto	u520
  1970  0615                     u521:
  1971  0615  2E07               	goto	l30000612
  1972  0616                     u520:
  1973                           	
  1974  0616                     l30000615:	
  1975                           	line	17
  1976  0616  3001               	movlw	01h
  1977  0617                     u535:
  1978  0617  1003               	clrc
  1979  0618  0DA4               	rlf	(___lwdiv@quotient),f
  1980  0619  0DA5               	rlf	(___lwdiv@quotient+1),f
  1981  061A  3EFF               	addlw	-1
  1982  061B  1D03               	skipz
  1983  061C  2E17               	goto	u535
  1984                           	line	18
  1985  061D  082A               	movf	(___lwdiv@divisor+1),w
  1986  061E  0228               	subwf	(___lwdiv@dividend+1),w
  1987  061F  1D03               	skipz
  1988  0620  2E23               	goto	u545
  1989  0621  0829               	movf	(___lwdiv@divisor),w
  1990  0622  0227               	subwf	(___lwdiv@dividend),w
  1991  0623                     u545:
  1992  0623  1C03               	skipc
  1993  0624  2E26               	goto	u541
  1994  0625  2E27               	goto	u540
  1995  0626                     u541:
  1996  0626  2E2E               	goto	l30000618
  1997  0627                     u540:
  1998                           	
  1999  0627                     l30000616:	
  2000                           	line	19
  2001  0627  0829               	movf	(___lwdiv@divisor),w
  2002  0628  02A7               	subwf	(___lwdiv@dividend),f
  2003  0629  082A               	movf	(___lwdiv@divisor+1),w
  2004  062A  1C03               	skipc
  2005  062B  03A8               	decf	(___lwdiv@dividend+1),f
  2006  062C  02A8               	subwf	(___lwdiv@dividend+1),f
  2007                           	
  2008  062D                     l30000617:	
  2009                           	line	20
  2010  062D  1424               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  2011                           	
  2012  062E                     l30000618:	
  2013                           	line	22
  2014  062E  3001               	movlw	01h
  2015  062F                     u555:
  2016  062F  1003               	clrc
  2017  0630  0CAA               	rrf	(___lwdiv@divisor+1),f
  2018  0631  0CA9               	rrf	(___lwdiv@divisor),f
  2019  0632  3EFF               	addlw	-1
  2020  0633  1D03               	skipz
  2021  0634  2E2F               	goto	u555
  2022                           	
  2023  0635                     l30000619:	
  2024                           	line	23
  2025  0635  3001               	movlw	low(01h)
  2026  0636  02A6               	subwf	(___lwdiv@counter),f
  2027  0637  1D03               	btfss	status,2
  2028  0638  2E3A               	goto	u561
  2029  0639  2E3B               	goto	u560
  2030  063A                     u561:
  2031  063A  2E16               	goto	l30000615
  2032  063B                     u560:
  2033                           	
  2034  063B                     l30000620:	
  2035                           	line	25
  2036  063B  0825               	movf	(___lwdiv@quotient+1),w
  2037  063C  01A8               	clrf	(?___lwdiv+1)
  2038  063D  07A8               	addwf	(?___lwdiv+1)
  2039  063E  0824               	movf	(___lwdiv@quotient),w
  2040  063F  01A7               	clrf	(?___lwdiv)
  2041  0640  07A7               	addwf	(?___lwdiv)
  2042                           
  2043                           	
  2044  0641                     l27:	
  2045  0641  0008               	return
  2046                           	opt stack 0
  2047                           GLOBAL	__end_of___lwdiv
  2048  0642                     	__end_of___lwdiv:
  2049                           ; =============== function ___lwdiv ends ============
  2050                           
  2051                           psect	text69,local,class=CODE,delta=2
  2052                           global __ptext69
  2053  0425                     __ptext69:
  2054                           	line	26
  2055                           	signat	___lwdiv,8314
  2056                           	global	_lcd_init
  2057                           
  2058                           ; *************** function _lcd_init *****************
  2059                           ; Defined at:
  2060                           ;		line 51 in file "C:\Users\Satheesh M\Documents\Body Temperature using PIC16F877A\MPLA
                                 B\lm35.c"
  2061                           ; Parameters:    Size  Location     Type
  2062                           ;		None
  2063                           ; Auto vars:     Size  Location     Type
  2064                           ;		None
  2065                           ; Return value:  Size  Location     Type
  2066                           ;		None               void
  2067                           ; Registers used:
  2068                           ;		wreg, status,2, status,0, pclath, cstack
  2069                           ; Tracked objects:
  2070                           ;		On entry : 0/0
  2071                           ;		On exit  : 0/0
  2072                           ;		Unchanged: 0/0
  2073                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2074                           ;      Locals:         0       0       0       0       0
  2075                           ;      Temp:     0
  2076                           ;      Total:    0
  2077                           ; This function calls:
  2078                           ;		_lcd_cmd
  2079                           ; This function is called by:
  2080                           ;		_main
  2081                           ; This function uses a non-reentrant model
  2082                           ; 
  2083                           psect	text69
  2084                           	file	"C:\Users\Satheesh M\Documents\Body Temperature using PIC16F877A\MPLAB\lm35.c"
  2085                           	line	51
  2086                           	global	__size_of_lcd_init
  2087  001F                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  2088                           ;lm35.c: 51: void lcd_init() {
  2089                           	
  2090  0425                     _lcd_init:	
  2091                           	opt stack 6
  2092                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2093                           	line	52
  2094                           	
  2095  0425                     l30000594:	
  2096                           ;lm35.c: 52: lcd_cmd(0x02);
  2097  0425  3002               	movlw	(02h)
  2098  0426  120A  118A  2588   	fcall	_lcd_cmd
              120A  118A         
  2099                           	line	53
  2100                           ;lm35.c: 53: lcd_cmd(0x28);
  2101  042B  3028               	movlw	(028h)
  2102  042C  120A  118A  2588   	fcall	_lcd_cmd
              120A  118A         
  2103                           	line	54
  2104                           ;lm35.c: 54: lcd_cmd(0x06);
  2105  0431  3006               	movlw	(06h)
  2106  0432  120A  118A  2588   	fcall	_lcd_cmd
              120A  118A         
  2107                           	line	55
  2108                           ;lm35.c: 55: lcd_cmd(0x0c);
  2109  0437  300C               	movlw	(0Ch)
  2110  0438  120A  118A  2588   	fcall	_lcd_cmd
              120A  118A         
  2111                           	line	56
  2112                           ;lm35.c: 56: lcd_cmd(0x01);
  2113  043D  3001               	movlw	(01h)
  2114  043E  120A  118A  2588   	fcall	_lcd_cmd
              120A  118A         
  2115                           	
  2116  0443                     l7:	
  2117  0443  0008               	return
  2118                           	opt stack 0
  2119                           GLOBAL	__end_of_lcd_init
  2120  0444                     	__end_of_lcd_init:
  2121                           ; =============== function _lcd_init ends ============
  2122                           
  2123                           psect	text70,local,class=CODE,delta=2
  2124                           global __ptext70
  2125  04FE                     __ptext70:
  2126                           	line	57
  2127                           	signat	_lcd_init,88
  2128                           	global	_lcd_display
  2129                           
  2130                           ; *************** function _lcd_display *****************
  2131                           ; Defined at:
  2132                           ;		line 60 in file "C:\Users\Satheesh M\Documents\Body Temperature using PIC16F877A\MPLA
                                 B\lm35.c"
  2133                           ; Parameters:    Size  Location     Type
  2134                           ;  d               1    wreg     PTR const unsigned char 
  2135                           ;		 -> STR_1(8), STR_2(14), 
  2136                           ; Auto vars:     Size  Location     Type
  2137                           ;  d               1    3[BANK0 ] PTR const unsigned char 
  2138                           ;		 -> STR_1(8), STR_2(14), 
  2139                           ;  e               2    4[BANK0 ] int 
  2140                           ; Return value:  Size  Location     Type
  2141                           ;		None               void
  2142                           ; Registers used:
  2143                           ;		wreg, status,2, status,0, pclath, cstack
  2144                           ; Tracked objects:
  2145                           ;		On entry : 0/0
  2146                           ;		On exit  : 0/0
  2147                           ;		Unchanged: 0/0
  2148                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2149                           ;      Locals:         0       3       0       0       0
  2150                           ;      Temp:     0
  2151                           ;      Total:    3
  2152                           ; This function calls:
  2153                           ;		_lcd_data
  2154                           ; This function is called by:
  2155                           ;		_main
  2156                           ; This function uses a non-reentrant model
  2157                           ; 
  2158                           psect	text70
  2159                           	file	"C:\Users\Satheesh M\Documents\Body Temperature using PIC16F877A\MPLAB\lm35.c"
  2160                           	line	60
  2161                           	global	__size_of_lcd_display
  2162  0029                     	__size_of_lcd_display	equ	__end_of_lcd_display-_lcd_display
  2163                           ;lm35.c: 60: void lcd_display(const unsigned char d[]) {
  2164                           	
  2165  04FE                     _lcd_display:	
  2166                           	opt stack 6
  2167                           ; Regs used in _lcd_display: [wreg+status,2+status,0+pclath+cstack]
  2168                           ;lcd_display@d stored from wreg
  2169  04FE  1283               	bcf	status, 5	;RP0=0, select bank0
  2170  04FF  1303               	bcf	status, 6	;RP1=0, select bank0
  2171  0500  00A3               	movwf	(lcd_display@d)
  2172                           	
  2173  0501                     l30000546:	
  2174                           	line	61
  2175                           ;lm35.c: 61: for(int e = 0; d[e] != 0; e++) {
  2176  0501  3000               	movlw	low(0)
  2177  0502  00A4               	movwf	(lcd_display@e)
  2178  0503  3000               	movlw	high(0)
  2179  0504  00A5               	movwf	((lcd_display@e))+1
  2180  0505  2D1A               	goto	l30000549
  2181                           	
  2182  0506                     l30000547:	
  2183                           	line	62
  2184                           ;lm35.c: 62: lcd_data(d[e]);
  2185  0506  0823               	movf	(lcd_display@d),w
  2186  0507  0724               	addwf	(lcd_display@e),w
  2187                           	FNCALL _lcd_display,stringtab
  2188  0508  120A  118A  2409   	fcall	stringdir
              120A  118A         
  2189  050D  120A  118A  2552   	fcall	_lcd_data
              120A  118A         
  2190                           	
  2191  0512                     l30000548:	
  2192                           	line	61
  2193  0512  3001               	movlw	low(01h)
  2194  0513  1283               	bcf	status, 5	;RP0=0, select bank0
  2195  0514  1303               	bcf	status, 6	;RP1=0, select bank0
  2196  0515  07A4               	addwf	(lcd_display@e),f
  2197  0516  1803               	skipnc
  2198  0517  0AA5               	incf	(lcd_display@e+1),f
  2199  0518  3000               	movlw	high(01h)
  2200  0519  07A5               	addwf	(lcd_display@e+1),f
  2201                           	
  2202  051A                     l30000549:	
  2203  051A  0823               	movf	(lcd_display@d),w
  2204  051B  0724               	addwf	(lcd_display@e),w
  2205                           	FNCALL _lcd_display,stringtab
  2206  051C  120A  118A  2409   	fcall	stringdir
              120A  118A         
  2207  0521  3800               	iorlw	0
  2208  0522  1D03               	skipz
  2209  0523  2D25               	goto	u351
  2210  0524  2D26               	goto	u350
  2211  0525                     u351:
  2212  0525  2D06               	goto	l30000547
  2213  0526                     u350:
  2214                           	
  2215  0526                     l8:	
  2216  0526  0008               	return
  2217                           	opt stack 0
  2218                           GLOBAL	__end_of_lcd_display
  2219  0527                     	__end_of_lcd_display:
  2220                           ; =============== function _lcd_display ends ============
  2221                           
  2222                           psect	text71,local,class=CODE,delta=2
  2223                           global __ptext71
  2224  0588                     __ptext71:
  2225                           	line	64
  2226                           	signat	_lcd_display,4216
  2227                           	global	_lcd_cmd
  2228                           
  2229                           ; *************** function _lcd_cmd *****************
  2230                           ; Defined at:
  2231                           ;		line 16 in file "C:\Users\Satheesh M\Documents\Body Temperature using PIC16F877A\MPLA
                                 B\lm35.c"
  2232                           ; Parameters:    Size  Location     Type
  2233                           ;  com             1    wreg     unsigned char 
  2234                           ; Auto vars:     Size  Location     Type
  2235                           ;  com             1    2[BANK0 ] unsigned char 
  2236                           ;  b               2    0[BANK0 ] unsigned int 
  2237                           ; Return value:  Size  Location     Type
  2238                           ;		None               void
  2239                           ; Registers used:
  2240                           ;		wreg, status,2, status,0, pclath, cstack
  2241                           ; Tracked objects:
  2242                           ;		On entry : 0/0
  2243                           ;		On exit  : 0/0
  2244                           ;		Unchanged: 0/0
  2245                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2246                           ;      Locals:         3       3       0       0       0
  2247                           ;      Temp:     3
  2248                           ;      Total:    6
  2249                           ; This function calls:
  2250                           ;		_delay
  2251                           ; This function is called by:
  2252                           ;		_lcd_init
  2253                           ;		_main
  2254                           ; This function uses a non-reentrant model
  2255                           ; 
  2256                           psect	text71
  2257                           	file	"C:\Users\Satheesh M\Documents\Body Temperature using PIC16F877A\MPLAB\lm35.c"
  2258                           	line	16
  2259                           	global	__size_of_lcd_cmd
  2260  0036                     	__size_of_lcd_cmd	equ	__end_of_lcd_cmd-_lcd_cmd
  2261                           ;lm35.c: 16: void lcd_cmd(unsigned char com) {
  2262                           	
  2263  0588                     _lcd_cmd:	
  2264                           	opt stack 5
  2265                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  2266                           ;lcd_cmd@com stored from wreg
  2267  0588  1283               	bcf	status, 5	;RP0=0, select bank0
  2268  0589  1303               	bcf	status, 6	;RP1=0, select bank0
  2269  058A  00A2               	movwf	(lcd_cmd@com)
  2270                           	
  2271  058B                     l30000581:	
  2272                           	line	17
  2273                           ;lm35.c: 17: PORTD = (com & 0xf0);
  2274  058B  0822               	movf	(lcd_cmd@com),w
  2275  058C  39F0               	andlw	0F0h
  2276  058D  0088               	movwf	(8)	;volatile
  2277                           	
  2278  058E                     l30000582:	
  2279                           	line	18
  2280                           ;lm35.c: 18: RD0 = 0;
  2281  058E  1008               	bcf	(64/8),(64)&7
  2282                           	
  2283  058F                     l30000583:	
  2284                           	line	19
  2285                           ;lm35.c: 19: RD1 = 0;
  2286  058F  1088               	bcf	(65/8),(65)&7
  2287                           	
  2288  0590                     l30000584:	
  2289                           	line	20
  2290                           ;lm35.c: 20: RD2 = 1;
  2291  0590  1508               	bsf	(66/8),(66)&7
  2292                           	
  2293  0591                     l30000585:	
  2294                           	line	21
  2295                           ;lm35.c: 21: delay(200);
  2296  0591  30C8               	movlw	low(0C8h)
  2297  0592  00F6               	movwf	(?_delay)
  2298  0593  3000               	movlw	high(0C8h)
  2299  0594  00F7               	movwf	((?_delay))+1
  2300  0595  120A  118A  2444   	fcall	_delay
              120A  118A         
  2301                           	
  2302  059A                     l30000586:	
  2303                           	line	22
  2304                           ;lm35.c: 22: RD2 = 0;
  2305  059A  1283               	bcf	status, 5	;RP0=0, select bank0
  2306  059B  1303               	bcf	status, 6	;RP1=0, select bank0
  2307  059C  1108               	bcf	(66/8),(66)&7
  2308                           	
  2309  059D                     l30000587:	
  2310                           	line	24
  2311                           ;lm35.c: 23: unsigned int b;
  2312                           ;lm35.c: 24: b = com << 4;
  2313  059D  0822               	movf	(lcd_cmd@com),w
  2314  059E  00F8               	movwf	(??_lcd_cmd+0+0)
  2315  059F  01F9               	clrf	(??_lcd_cmd+0+0+1)
  2316  05A0  3004               	movlw	04h
  2317  05A1  00FA               	movwf	(??_lcd_cmd+2+0)
  2318  05A2                     u395:
  2319  05A2  1003               	clrc
  2320  05A3  0DF8               	rlf	(??_lcd_cmd+0+0),f
  2321  05A4  0DF9               	rlf	(??_lcd_cmd+0+1),f
  2322  05A5  0BFA               	decfsz	(??_lcd_cmd+2+0),f
  2323  05A6  2DA2               	goto	u395
  2324  05A7  0878               	movf	0+(??_lcd_cmd+0+0),w
  2325  05A8  00A0               	movwf	(lcd_cmd@b)
  2326  05A9  0879               	movf	1+(??_lcd_cmd+0+0),w
  2327  05AA  00A1               	movwf	(lcd_cmd@b+1)
  2328                           	
  2329  05AB                     l30000588:	
  2330                           	line	25
  2331                           ;lm35.c: 25: PORTD = (b & 0xf0);
  2332  05AB  0820               	movf	(lcd_cmd@b),w
  2333  05AC  39F0               	andlw	0F0h
  2334  05AD  0088               	movwf	(8)	;volatile
  2335                           	
  2336  05AE                     l30000589:	
  2337                           	line	26
  2338                           ;lm35.c: 26: RD0 = 0;
  2339  05AE  1008               	bcf	(64/8),(64)&7
  2340                           	
  2341  05AF                     l30000590:	
  2342                           	line	27
  2343                           ;lm35.c: 27: RD1 = 0;
  2344  05AF  1088               	bcf	(65/8),(65)&7
  2345                           	
  2346  05B0                     l30000591:	
  2347                           	line	28
  2348                           ;lm35.c: 28: RD2 = 1;
  2349  05B0  1508               	bsf	(66/8),(66)&7
  2350                           	
  2351  05B1                     l30000592:	
  2352                           	line	29
  2353                           ;lm35.c: 29: delay(200);
  2354  05B1  30C8               	movlw	low(0C8h)
  2355  05B2  00F6               	movwf	(?_delay)
  2356  05B3  3000               	movlw	high(0C8h)
  2357  05B4  00F7               	movwf	((?_delay))+1
  2358  05B5  120A  118A  2444   	fcall	_delay
              120A  118A         
  2359                           	
  2360  05BA                     l30000593:	
  2361                           	line	30
  2362                           ;lm35.c: 30: RD2 = 0;
  2363  05BA  1283               	bcf	status, 5	;RP0=0, select bank0
  2364  05BB  1303               	bcf	status, 6	;RP1=0, select bank0
  2365  05BC  1108               	bcf	(66/8),(66)&7
  2366                           	
  2367  05BD                     l5:	
  2368  05BD  0008               	return
  2369                           	opt stack 0
  2370                           GLOBAL	__end_of_lcd_cmd
  2371  05BE                     	__end_of_lcd_cmd:
  2372                           ; =============== function _lcd_cmd ends ============
  2373                           
  2374                           psect	text72,local,class=CODE,delta=2
  2375                           global __ptext72
  2376  0552                     __ptext72:
  2377                           	line	31
  2378                           	signat	_lcd_cmd,4216
  2379                           	global	_lcd_data
  2380                           
  2381                           ; *************** function _lcd_data *****************
  2382                           ; Defined at:
  2383                           ;		line 33 in file "C:\Users\Satheesh M\Documents\Body Temperature using PIC16F877A\MPLA
                                 B\lm35.c"
  2384                           ; Parameters:    Size  Location     Type
  2385                           ;  dat             1    wreg     unsigned char 
  2386                           ; Auto vars:     Size  Location     Type
  2387                           ;  dat             1    2[BANK0 ] unsigned char 
  2388                           ;  c               2    0[BANK0 ] unsigned int 
  2389                           ; Return value:  Size  Location     Type
  2390                           ;		None               void
  2391                           ; Registers used:
  2392                           ;		wreg, status,2, status,0, pclath, cstack
  2393                           ; Tracked objects:
  2394                           ;		On entry : 0/0
  2395                           ;		On exit  : 0/0
  2396                           ;		Unchanged: 0/0
  2397                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2398                           ;      Locals:         3       3       0       0       0
  2399                           ;      Temp:     3
  2400                           ;      Total:    6
  2401                           ; This function calls:
  2402                           ;		_delay
  2403                           ; This function is called by:
  2404                           ;		_lcd_display
  2405                           ;		_main
  2406                           ; This function uses a non-reentrant model
  2407                           ; 
  2408                           psect	text72
  2409                           	file	"C:\Users\Satheesh M\Documents\Body Temperature using PIC16F877A\MPLAB\lm35.c"
  2410                           	line	33
  2411                           	global	__size_of_lcd_data
  2412  0036                     	__size_of_lcd_data	equ	__end_of_lcd_data-_lcd_data
  2413                           ;lm35.c: 33: void lcd_data(unsigned char dat) {
  2414                           	
  2415  0552                     _lcd_data:	
  2416                           	opt stack 5
  2417                           ; Regs used in _lcd_data: [wreg+status,2+status,0+pclath+cstack]
  2418                           ;lcd_data@dat stored from wreg
  2419  0552  1283               	bcf	status, 5	;RP0=0, select bank0
  2420  0553  1303               	bcf	status, 6	;RP1=0, select bank0
  2421  0554  00A2               	movwf	(lcd_data@dat)
  2422                           	
  2423  0555                     l30000533:	
  2424                           	line	34
  2425                           ;lm35.c: 34: PORTD = (dat & 0xf0);
  2426  0555  0822               	movf	(lcd_data@dat),w
  2427  0556  39F0               	andlw	0F0h
  2428  0557  0088               	movwf	(8)	;volatile
  2429                           	
  2430  0558                     l30000534:	
  2431                           	line	35
  2432                           ;lm35.c: 35: RD0 = 1;
  2433  0558  1408               	bsf	(64/8),(64)&7
  2434                           	
  2435  0559                     l30000535:	
  2436                           	line	36
  2437                           ;lm35.c: 36: RD1 = 0;
  2438  0559  1088               	bcf	(65/8),(65)&7
  2439                           	
  2440  055A                     l30000536:	
  2441                           	line	37
  2442                           ;lm35.c: 37: RD2 = 1;
  2443  055A  1508               	bsf	(66/8),(66)&7
  2444                           	
  2445  055B                     l30000537:	
  2446                           	line	38
  2447                           ;lm35.c: 38: delay(200);
  2448  055B  30C8               	movlw	low(0C8h)
  2449  055C  00F6               	movwf	(?_delay)
  2450  055D  3000               	movlw	high(0C8h)
  2451  055E  00F7               	movwf	((?_delay))+1
  2452  055F  120A  118A  2444   	fcall	_delay
              120A  118A         
  2453                           	
  2454  0564                     l30000538:	
  2455                           	line	39
  2456                           ;lm35.c: 39: RD2 = 0;
  2457  0564  1283               	bcf	status, 5	;RP0=0, select bank0
  2458  0565  1303               	bcf	status, 6	;RP1=0, select bank0
  2459  0566  1108               	bcf	(66/8),(66)&7
  2460                           	
  2461  0567                     l30000539:	
  2462                           	line	41
  2463                           ;lm35.c: 40: unsigned int c;
  2464                           ;lm35.c: 41: c = dat << 4;
  2465  0567  0822               	movf	(lcd_data@dat),w
  2466  0568  00F8               	movwf	(??_lcd_data+0+0)
  2467  0569  01F9               	clrf	(??_lcd_data+0+0+1)
  2468  056A  3004               	movlw	04h
  2469  056B  00FA               	movwf	(??_lcd_data+2+0)
  2470  056C                     u345:
  2471  056C  1003               	clrc
  2472  056D  0DF8               	rlf	(??_lcd_data+0+0),f
  2473  056E  0DF9               	rlf	(??_lcd_data+0+1),f
  2474  056F  0BFA               	decfsz	(??_lcd_data+2+0),f
  2475  0570  2D6C               	goto	u345
  2476  0571  0878               	movf	0+(??_lcd_data+0+0),w
  2477  0572  00A0               	movwf	(lcd_data@c)
  2478  0573  0879               	movf	1+(??_lcd_data+0+0),w
  2479  0574  00A1               	movwf	(lcd_data@c+1)
  2480                           	
  2481  0575                     l30000540:	
  2482                           	line	42
  2483                           ;lm35.c: 42: PORTD = (c & 0xf0);
  2484  0575  0820               	movf	(lcd_data@c),w
  2485  0576  39F0               	andlw	0F0h
  2486  0577  0088               	movwf	(8)	;volatile
  2487                           	
  2488  0578                     l30000541:	
  2489                           	line	43
  2490                           ;lm35.c: 43: RD0 = 1;
  2491  0578  1408               	bsf	(64/8),(64)&7
  2492                           	
  2493  0579                     l30000542:	
  2494                           	line	44
  2495                           ;lm35.c: 44: RD1 = 0;
  2496  0579  1088               	bcf	(65/8),(65)&7
  2497                           	
  2498  057A                     l30000543:	
  2499                           	line	45
  2500                           ;lm35.c: 45: RD2 = 1;
  2501  057A  1508               	bsf	(66/8),(66)&7
  2502                           	
  2503  057B                     l30000544:	
  2504                           	line	46
  2505                           ;lm35.c: 46: delay(200);
  2506  057B  30C8               	movlw	low(0C8h)
  2507  057C  00F6               	movwf	(?_delay)
  2508  057D  3000               	movlw	high(0C8h)
  2509  057E  00F7               	movwf	((?_delay))+1
  2510  057F  120A  118A  2444   	fcall	_delay
              120A  118A         
  2511                           	
  2512  0584                     l30000545:	
  2513                           	line	47
  2514                           ;lm35.c: 47: RD2 = 0;
  2515  0584  1283               	bcf	status, 5	;RP0=0, select bank0
  2516  0585  1303               	bcf	status, 6	;RP1=0, select bank0
  2517  0586  1108               	bcf	(66/8),(66)&7
  2518                           	
  2519  0587                     l6:	
  2520  0587  0008               	return
  2521                           	opt stack 0
  2522                           GLOBAL	__end_of_lcd_data
  2523  0588                     	__end_of_lcd_data:
  2524                           ; =============== function _lcd_data ends ============
  2525                           
  2526                           psect	text73,local,class=CODE,delta=2
  2527                           global __ptext73
  2528  0444                     __ptext73:
  2529                           	line	48
  2530                           	signat	_lcd_data,4216
  2531                           	global	_delay
  2532                           
  2533                           ; *************** function _delay *****************
  2534                           ; Defined at:
  2535                           ;		line 11 in file "C:\Users\Satheesh M\Documents\Body Temperature using PIC16F877A\MPLA
                                 B\lm35.c"
  2536                           ; Parameters:    Size  Location     Type
  2537                           ;  a               2    0[COMMON] unsigned int 
  2538                           ; Auto vars:     Size  Location     Type
  2539                           ;		None
  2540                           ; Return value:  Size  Location     Type
  2541                           ;		None               void
  2542                           ; Registers used:
  2543                           ;		wreg
  2544                           ; Tracked objects:
  2545                           ;		On entry : 0/0
  2546                           ;		On exit  : 0/0
  2547                           ;		Unchanged: 0/0
  2548                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2549                           ;      Locals:         2       0       0       0       0
  2550                           ;      Temp:     0
  2551                           ;      Total:    2
  2552                           ; This function calls:
  2553                           ;		Nothing
  2554                           ; This function is called by:
  2555                           ;		_lcd_cmd
  2556                           ;		_lcd_data
  2557                           ;		_main
  2558                           ; This function uses a non-reentrant model
  2559                           ; 
  2560                           psect	text73
  2561                           	file	"C:\Users\Satheesh M\Documents\Body Temperature using PIC16F877A\MPLAB\lm35.c"
  2562                           	line	11
  2563                           	global	__size_of_delay
  2564  0011                     	__size_of_delay	equ	__end_of_delay-_delay
  2565                           ;pic168xa.h: 19: volatile unsigned char INDF @ 0x00;
  2566                           ;pic168xa.h: 20: volatile unsigned char TMR0 @ 0x01;
  2567                           ;pic168xa.h: 21: volatile unsigned char PCL @ 0x02;
  2568                           ;pic168xa.h: 22: volatile unsigned char STATUS @ 0x03;
  2569                           ;pic168xa.h: 23: unsigned char FSR @ 0x04;
  2570                           ;pic168xa.h: 24: volatile unsigned char PORTA @ 0x05;
  2571                           ;pic168xa.h: 25: volatile unsigned char PORTB @ 0x06;
  2572                           ;pic168xa.h: 26: volatile unsigned char PORTC @ 0x07;
  2573                           ;pic168xa.h: 28: volatile unsigned char PORTD @ 0x08;
  2574                           ;pic168xa.h: 29: volatile unsigned char PORTE @ 0x09;
  2575                           	
  2576  0444                     _delay:	
  2577                           	opt stack 4
  2578                           ; Regs used in _delay: [wreg]
  2579                           	
  2580  0444                     l30000579:	
  2581                           	
  2582  0444                     l30000580:	
  2583                           	line	12
  2584  0444  3001               	movlw	low(01h)
  2585  0445  02F6               	subwf	(delay@a),f
  2586  0446  3000               	movlw	high(01h)
  2587  0447  1C03               	skipc
  2588  0448  03F7               	decf	(delay@a+1),f
  2589  0449  02F7               	subwf	(delay@a+1),f
  2590  044A  30FF               	movlw	high(0FFFFh)
  2591  044B  0677               	xorwf	((delay@a+1))&07fh,w
  2592  044C  1D03               	skipz
  2593  044D  2C50               	goto	u385
  2594  044E  30FF               	movlw	low(0FFFFh)
  2595  044F  0676               	xorwf	((delay@a))&07fh,w
  2596  0450                     u385:
  2597                           
  2598  0450  1D03               	skipz
  2599  0451  2C53               	goto	u381
  2600  0452  2C54               	goto	u380
  2601  0453                     u381:
  2602  0453  2C44               	goto	l30000580
  2603  0454                     u380:
  2604                           	
  2605  0454                     l1:	
  2606  0454  0008               	return
  2607                           	opt stack 0
  2608                           GLOBAL	__end_of_delay
  2609  0455                     	__end_of_delay:
  2610                           ; =============== function _delay ends ============
  2611                           
  2612                           psect	text74,local,class=CODE,delta=2
  2613                           global __ptext74
  2614  0463                     __ptext74:
  2615                           	line	13
  2616                           	signat	_delay,4216
  2617                           	global	btemp
  2618  007E                     	btemp set 07Eh


HI-TECH Software PICC Macro Assembler V9.70 build 5239 
Symbol Table                                                                                   Sun Mar 03 09:36:11 2024

    ___awdiv@dividend 0028                     _A 0070                     _B 0072                     _C 0033  
                   _D 0035                     _E 0074                     l1 0454                     l5 05BD  
                   l6 0587                     l7 0443                     l8 0526                     pc 0002  
      __size_of_delay 0011                    _DA 04A5                    l22 0551                    _BF 04A0  
                  _DC 0019                    l26 0537                    l27 0641                    l36 05F6  
                  l37 05F6                    _PD 001B                    _RD 0C60                    _UA 04A1  
                  _TO 001C                    _RW 04A2                    _WR 0C61                    fsr 0004  
         __pbssCOMMON 0070       __size_of___wmul 002B                   l166 06B3                   l168 0662  
                 _CM0 04E0                   _CM1 04E1                   _CM2 04E2                   _CKE 04A6  
                 _IBF 044F                   _CIS 04E3                   _CKP 00A4                   _GIE 005F  
                 _BOR 0470                   _RA0 0028                   _RA1 0029                   _RB0 0030  
                 _RA2 002A                   _RB1 0031                   _RA3 002B                   _RC0 0038  
                 _RB2 0032                   _RA4 002C                   _RC1 0039                   _RB3 0033  
                 _RA5 002D                   _RD0 0040                   _RC2 003A                   _RB4 0034  
                 _RD1 0041                   _RC3 003B                   _RB5 0035                   _RE0 0048  
                 _RD2 0042                   _RC4 003C                   _RB6 0036                   _RE1 0049  
                 _RD3 0043                   _RC5 003D                   _RB7 0037                   _RE2 004A  
                 _RD4 0044                   _RC6 003E                   _RD5 0045                   _RC7 003F  
                 _OBF 044E                   _RD6 0046                   _RD7 0047                   u400 0531  
                 _FSR 0004                   u401 0530                   _PCL 0002                   u500 0603  
                 u501 0602                   u350 0526                   u430 054B                   _PS0 0408  
                 _PR2 0092                   u351 0525                   u431 054A                   u415 0538  
                 _PS1 0409                   u520 0616                   u440 05C6                   _PS2 040A  
                 _PEN 048A                   _RP0 001D                   _IRP 001F                   u345 056C  
                 u521 0615                   u441 05C5                   u425 053F                   _RP1 001E  
                 u610 067F                   u515 0608                   u611 067E                   u380 0454  
                 u540 0627                   u460 05D9                   u381 0453                   u541 0626  
                 u461 05D8                   u605 0671                   u470 05E3                   u630 0690  
                 u535 0617                   u471 05E2                   u455 05CB                   u631 068F  
                 u560 063B                   u385 0450                   u561 063A                   u545 0623  
                 u625 0680                   u490 05F6                   u650 06A4                   u570 064D  
                 u395 05A2                   u555 062F                   u491 05F5                   u475 05DF  
                 u651 06A3                   u635 068C                   u571 064C          lcd_display@d 0023  
                 u660 06A8                   u580 0659          lcd_display@e 0024                   _SEN 0488  
                 u485 05EA                   u645 0698                   u581 0658                   u590 066C  
                 u591 066B                   _PSA 040B                   u675 070D                   u685 072F  
                 _POR 0471                   _RX9 00C6                   _SMP 04A7                   _TX9 04C6  
                 indf 0000      __size_of___awdiv 0072      __size_of___lwdiv 004B      __size_of___lwmod 0039  
            _main$744 002F               ??_delay 0076      __size_of_lcd_cmd 0036                  _ADIE 0466  
                _ADIF 0066                  _ADFM 04FF                  _ADGO 00FA                  _ADON 00F8  
            __ptext70 04FE              __ptext71 0588              __ptext72 0552              __ptext64 0463  
            __ptext73 0444              __ptext65 0642                  _CHS0 00FB              __ptext74 0463  
            __ptext66 0527                  _CHS1 00FC              __ptext67 05BE                  _CHS2 00FD  
            __ptext68 05F7              __ptext69 0425                  _EEIE 046C                  _EEIF 006C  
                STR_1 041D                  STR_2 040F                  _GCEN 048F                  _CMIE 046E  
                _CMIF 006E                  _BRGH 04C2                  _T0IE 005D                  _T0IF 005A  
                _CREN 00C4                  _T0CS 040D                  _FERR 00C2                  _IBOV 044D  
                _CVR0 04E8                  _CVR1 04E9                  _CVR2 04EA                  _CVR3 04EB  
                _T0SE 040C                  _CSRC 04C7                  _INDF 0000                  _PIE1 008C  
                _PIE2 008D                  _CVRR 04ED                  _PEIE 005E                  _INTE 005C  
                _INTF 0059                  _RBIE 005B                  _RBIF 0058                  _RCIE 0465  
                _RCEN 048B                  _RCIF 0065                  _PCON 008E                  _PIR1 000C  
                _PIR2 000D                  _OERR 00C1      ___awdiv@quotient 0026                  _RBPU 040F  
                _RX9D 00C0                  _TMR0 0001                  _TMR2 0011              _lcd_data 0552  
                _WCOL 00A7                  _SPEN 00C7                  _RSEN 0489                  _TX9D 04C0  
                _SREN 00C5                  _TRMT 04C1                  _STOP 04A4                  _TXIE 0464  
                _ZERO 001A                  _WREN 0C62                  _TXEN 04C5                  _TXIF 0064  
                _SYNC 04C4              _lcd_init 0425             ?_lcd_data 007B          ___awdiv@sign 0025  
           ?_lcd_init 007B                  _main 06B4                  btemp 007E            ??_lcd_data 0078  
                start 0000            ??_lcd_init 0079            lcd_cmd@com 0022   start_initialization 0455  
             ?___wmul 0020       __end_of___awdiv 06B4              ??___wmul 0076             stringcode 0408  
     __end_of___lwdiv 0642       __end_of___lwmod 05F7               _CCP1CON 0017               _CCP2CON 001D  
            lcd_cmd@b 0020               _ACKSTAT 048E        ___wmul@product 0076                 _C1INV 04E4  
               _C2INV 04E5     __size_of_lcd_data 0036                 _C1OUT 04E6                 _C2OUT 04E7  
               _ADCS0 00FE                 _ADCS1 00FF                 _ADCS2 04FE                 _ADDEN 00C3  
               ?_main 007B                 _ACKEN 048C                 _ACKDT 048D     __size_of_lcd_init 001F  
               _BCLIE 046B                 _BCLIF 006B                 _CCP1X 00BD                 _CCP1Y 00BC  
               _CCP2X 00ED                 _CCP2Y 00EC                 _EEADR 010D         __end_of_delay 0455  
     ___lwdiv@divisor 0029                 _CARRY 0018                 _EEPGD 0C67                 _CMCON 009C  
               _T1CON 0010                 _T2CON 0012               _T1CKPS0 0084               _T1CKPS1 0085  
               _PCFG0 04F8                 _PCFG1 04F9                 _PCFG2 04FA                 _PCFG3 04FB  
     __end_of_lcd_cmd 05BE               _T2CKPS0 0090               _T2CKPS1 0091       ___lwdiv@counter 0026  
               _CVREN 04EF                 _CVROE 04EE                 _RCREG 001A                 _RCSTA 0018  
               _TMR1H 000F                 _TMR1L 000E                 _SPBRG 0099                 _PORTA 0005  
               _PORTB 0006               _T1OSCEN 0083                 _PORTC 0007                 _PORTD 0008  
               _PORTE 0009                 _PSPIE 0467                 _PSPIF 0067                 _START 04A3  
               _SSPM0 00A0                 _SSPM1 00A1                 _SSPM2 00A2                 _SSPM3 00A3  
               _TRISA 0085                 _TRISB 0086                 _TRISC 0087                 _TRISD 0088  
               _SSPIE 0463                 _TRISE 0089                 _SSPIF 0063                 _SSPEN 00A5  
               _SSPOV 00A6                 _WRERR 0C63                 _TXREG 0019                 _TXSTA 0098  
           __pstrings 0400        __pcstackCOMMON 0076                 _delay 0444               _PSPMODE 044C  
             _SSPCON2 0091               _SSPSTAT 0094               _TOUTPS0 0093               _TOUTPS1 0094  
             _TOUTPS2 0095               _TOUTPS3 0096                 pclath 000A           _lcd_display 04FE  
               status 0003   __end_of_lcd_display 0527     ___wmul@multiplier 0020           lcd_data@dat 0022  
         main@Celsius 0031       ___awdiv@divisor 002A         __size_of_main 014C            __pbssBANK0 0033  
     ___awdiv@counter 0024              l30000601 05BE              l30000610 05F7              l30000602 05C6  
            l30000611 0603              l30000603 05CA              l30000540 0575              l30000612 0607  
            l30000620 063B              l30000604 05D1              l30000541 0578              l30000533 0555  
            l30000613 060E              l30000605 05D5              l30000542 0579              l30000534 0558  
            l30000614 0612              l30000606 05D9              l30000630 0677              l30000622 0642  
            l30000543 057A              l30000535 0559              l30000615 0616              l30000607 05E3  
            l30000631 067B              l30000623 0649              l30000544 057B              l30000536 055A  
            l30000616 0627              l30000608 05E9              l30000632 067F              l30000624 064D  
            l30000545 0584              l30000537 055B              l30000617 062D              l30000609 05F0  
            l30000633 0690              l30000625 0655              l30000538 0564              l30000546 0501  
            l30000618 062E              l30000634 0696              l30000626 0659              l30000650 06BF  
            l30000539 0567              l30000547 0506              l30000619 0635              l30000635 0697  
            l30000627 065E              l30000651 06C6              l30000580 0444              l30000548 0512  
            l30000636 069E              l30000628 066C              l30000660 06EF              l30000652 06CB  
            l30000581 058B              l30000549 051A              l30000629 0670              l30000637 06A4  
            l30000661 06F8              l30000653 06D4              l30000590 05AF              l30000582 058E  
            l30000638 06A8              l30000670 07A7              l30000662 06FD              l30000654 06DA  
            l30000591 05B0              l30000583 058F              l30000639 06AD              l30000671 07BF  
            l30000663 0706              l30000655 06E0              l30000592 05B1              l30000584 0590  
            l30000672 07D7              l30000664 0716              l30000656 06E9              l30000648 06B4  
            l30000593 05BA              l30000585 0591              l30000673 07DD              l30000665 071F  
            l30000657 06EC              l30000649 06BA              l30000586 059A              l30000594 0425  
            l30000674 07E3              l30000666 0728              l30000658 06ED              l30000579 0444  
            l30000587 059D              l30000595 0527              l30000675 07EC              l30000667 0739  
            l30000659 06EE              l30000588 05AB              l30000596 052B              l30000676 07F5  
            l30000668 0765              l30000589 05AE              l30000597 0531              l30000669 077D  
            l30000598 053E              l30000599 054B           __stringbase 040E               ___awdiv 0642  
            ?___awdiv 0028               ___lwdiv 05F7               ___lwmod 05BE              ?___lwdiv 0027  
            ?___lwmod 0020          ?_lcd_display 007B             ??___awdiv 0078             ??___lwdiv 0078  
           ??___lwmod 0076                ??_main 002C               _lcd_cmd 0588              ?_lcd_cmd 007B  
          __pmaintext 06B4  __size_of_lcd_display 0029             ??_lcd_cmd 0078      ___lwmod@dividend 0020  
           lcd_data@c 0020                ?_delay 0076              stringdir 0409              stringjmp 040D  
            stringtab 0400                _ADCON0 001F                _ADCON1 009F                _CCP1M0 00B8  
              _CCP1M1 00B9                _CCP1M2 00BA                _CCP1M3 00BB                _CCP2M0 00E8  
              _CCP2M1 00E9                _CCP2M2 00EA                _CCP2M3 00EB                _CCP1IE 0462  
    ___lwdiv@dividend 0027                _CCP1IF 0062                _CCP2IE 0468                _CCP2IF 0068  
      __end_of___wmul 0552                _ADRESH 001E                _EEADRH 010F                _ADRESL 009E  
              _EEADRL 010D                _EEDATA 010C                _CCPR1H 0016                _EEDATH 010E  
              _CCPR2H 001C                _CCPR1L 0015                _CCPR2L 001B                _EECON1 018C  
              _EECON2 018D          __end_of_main 0800                _GODONE 00FA  end_of_initialization 045F  
    __end_of_lcd_data 0588                _CVRCON 009D                _T1SYNC 0082                _INTEDG 040E  
              _PCLATH 000A                _INTCON 000B      __end_of_lcd_init 0444         __pcstackBANK0 0020  
              _TMR0IE 005D                _TMR0IF 005A                _TMR1IE 0460                _TMR1IF 0060  
              _TMR1CS 0081                _TMR2IE 0461                _TMR2IF 0061                _OPTION 0081  
              _TMR1ON 0080                _TMR2ON 0092                _SSPADD 0093                _TRISA0 0428  
              _TRISA1 0429                _TRISB0 0430                _TRISA2 042A                _TRISB1 0431  
              _TRISA3 042B                _TRISC0 0438                _TRISB2 0432                _TRISA4 042C  
              _TRISC1 0439                _TRISB3 0433                _TRISA5 042D                _TRISD0 0440  
              _TRISC2 043A                _TRISB4 0434                _TRISD1 0441                _TRISC3 043B  
              _TRISB5 0435                _TRISE0 0448                _TRISD2 0442                _TRISC4 043C  
              _TRISB6 0436                _TRISE1 0449                _TRISD3 0443                _TRISC5 043D  
              _TRISB7 0437                _TRISE2 044A                _TRISD4 0444                _TRISC6 043E  
              _TRISD5 0445                _TRISC7 043F                _TRISD6 0446                _TRISD7 0447  
              _STATUS 0003                _SSPCON 0014                _SSPBUF 0013                ___wmul 0527  
    ___lwdiv@quotient 0024                delay@a 0076       ___lwmod@divisor 0022         ??_lcd_display 0079  
     ___lwmod@counter 0077   ___wmul@multiplicand 0022  
